(function (e) { "function" === typeof define && define.amd ? define(["jquery"], e) : "object" === typeof exports ? e(require("jquery")) : e(window.jQuery || window.Zepto) })(function (e) {
    var a, t = function () { }, v = !!window.jQuery, w, q = e(window), n, u, k, C, l = function (c, b) { a.ev.on("mfp" + c + ".mfp", b) }, m = function (a, b, d, f) { var g = document.createElement("div"); g.className = "mfp-" + a; d && (g.innerHTML = d); f ? b && b.appendChild(g) : (g = e(g), b && g.appendTo(b)); return g }, h = function (c, b) {
        a.ev.triggerHandler("mfp" + c, b); a.st.callbacks && (c = c.charAt(0).toLowerCase() +
        c.slice(1), a.st.callbacks[c] && a.st.callbacks[c].apply(a, e.isArray(b) ? b : [b]))
    }, x = function (c) { c === C && a.currTemplate.closeBtn || (a.currTemplate.closeBtn = e(a.st.closeMarkup.replace("%title%", a.st.tClose)), C = c); return a.currTemplate.closeBtn }, y = function () { e.magnificPopup.instance || (a = new t, a.init(), e.magnificPopup.instance = a) }, E = function () { var a = document.createElement("p").style, b = ["ms", "O", "Moz", "Webkit"]; if (void 0 !== a.transition) return !0; for (; b.length;) if (b.pop() + "Transition" in a) return !0; return !1 }; t.prototype =
    {
        constructor: t, init: function () { var c = navigator.appVersion; a.isIE7 = -1 !== c.indexOf("MSIE 7."); a.isIE8 = -1 !== c.indexOf("MSIE 8."); a.isLowIE = a.isIE7 || a.isIE8; a.isAndroid = /android/gi.test(c); a.isIOS = /iphone|ipad|ipod/gi.test(c); a.supportsTransition = E(); a.probablyMobile = a.isAndroid || a.isIOS || /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent); n = e(document); a.popupsCache = {} }, open: function (c) {
            var b; if (!1 === c.isObj) {
                a.items = c.items.toArray(); a.index = 0; var d =
                c.items, f; for (b = 0; b < d.length; b++) if (f = d[b], f.parsed && (f = f.el[0]), f === c.el[0]) { a.index = b; break }
            } else a.items = e.isArray(c.items) ? c.items : [c.items], a.index = c.index || 0; if (a.isOpen) a.updateItemHTML(); else {
                a.types = []; k = ""; a.ev = c.mainEl && c.mainEl.length ? c.mainEl.eq(0) : n; c.key ? (a.popupsCache[c.key] || (a.popupsCache[c.key] = {}), a.currTemplate = a.popupsCache[c.key]) : a.currTemplate = {}; a.st = e.extend(!0, {}, e.magnificPopup.defaults, c); a.fixedContentPos = "auto" === a.st.fixedContentPos ? !a.probablyMobile : a.st.fixedContentPos;
                a.st.modal && (a.st.closeOnContentClick = !1, a.st.closeOnBgClick = !1, a.st.showCloseBtn = !1, a.st.enableEscapeKey = !1); a.bgOverlay || (a.bgOverlay = m("bg").on("click.mfp", function () { a.close() }), a.wrap = m("wrap").attr("tabindex", -1).on("click.mfp", function (c) { a._checkIfClose(c.target) && a.close() }), a.container = m("container", a.wrap)); a.contentContainer = m("content"); a.st.preloader && (a.preloader = m("preloader", a.container, a.st.tLoading)); d = e.magnificPopup.modules; for (b = 0; b < d.length; b++) f = d[b], f = f.charAt(0).toUpperCase() +
                f.slice(1), a["init" + f].call(a); h("BeforeOpen"); a.st.showCloseBtn && (a.st.closeBtnInside ? (l("MarkupParse", function (a, c, b, d) { b.close_replaceWith = x(d.type) }), k += " mfp-close-btn-in") : a.wrap.append(x())); a.st.alignTop && (k += " mfp-align-top"); a.fixedContentPos ? a.wrap.css({ overflow: a.st.overflowY, overflowX: "hidden", overflowY: a.st.overflowY }) : a.wrap.css({ top: q.scrollTop(), position: "absolute" }); (!1 === a.st.fixedBgPos || "auto" === a.st.fixedBgPos && !a.fixedContentPos) && a.bgOverlay.css({ height: n.height(), position: "absolute" });
                if (a.st.enableEscapeKey) n.on("keyup.mfp", function (c) { 27 === c.keyCode && a.close() }); q.on("resize.mfp", function () { a.updateSize() }); a.st.closeOnContentClick || (k += " mfp-auto-cursor"); k && a.wrap.addClass(k); b = a.wH = q.height(); d = {}; a.fixedContentPos && a._hasScrollBar(b) && (f = a._getScrollbarSize()) && (d.marginRight = f); a.fixedContentPos && (a.isIE7 ? e("body, html").css("overflow", "hidden") : d.overflow = "hidden"); f = a.st.mainClass; a.isIE7 && (f += " mfp-ie7"); f && a._addClassToMFP(f); a.updateItemHTML(); h("BuildControls"); e("html").css(d);
                a.bgOverlay.add(a.wrap).prependTo(a.st.prependTo || e(document.body)); a._lastFocusedEl = document.activeElement; setTimeout(function () { a.content ? (a._addClassToMFP("mfp-ready"), a._setFocus()) : a.bgOverlay.addClass("mfp-ready"); n.on("focusin.mfp", a._onFocusIn) }, 16); a.isOpen = !0; a.updateSize(b); h("Open"); return c
            }
        }, close: function () {
            a.isOpen && (h("BeforeClose"), a.isOpen = !1, a.st.removalDelay && !a.isLowIE && a.supportsTransition ? (a._addClassToMFP("mfp-removing"), setTimeout(function () { a._close() }, a.st.removalDelay)) :
            a._close())
        }, _close: function () {
            h("Close"); var c = "mfp-removing mfp-ready "; a.bgOverlay.detach(); a.wrap.detach(); a.container.empty(); a.st.mainClass && (c += a.st.mainClass + " "); a._removeClassFromMFP(c); a.fixedContentPos && (c = { marginRight: "" }, a.isIE7 ? e("body, html").css("overflow", "") : c.overflow = "", e("html").css(c)); n.off("keyup.mfp focusin.mfp"); a.ev.off(".mfp"); a.wrap.attr("class", "mfp-wrap").removeAttr("style"); a.bgOverlay.attr("class", "mfp-bg"); a.container.attr("class", "mfp-container"); !a.st.showCloseBtn ||
            a.st.closeBtnInside && !0 !== a.currTemplate[a.currItem.type] || a.currTemplate.closeBtn && a.currTemplate.closeBtn.detach(); a._lastFocusedEl && e(a._lastFocusedEl).focus(); a.currItem = null; a.content = null; a.currTemplate = null; a.prevHeight = 0; h("AfterClose")
        }, updateSize: function (c) { a.isIOS ? (c = document.documentElement.clientWidth / window.innerWidth * window.innerHeight, a.wrap.css("height", c), a.wH = c) : a.wH = c || q.height(); a.fixedContentPos || a.wrap.css("height", a.wH); h("Resize") }, updateItemHTML: function () {
            var c = a.items[a.index];
            a.contentContainer.detach(); a.content && a.content.detach(); c.parsed || (c = a.parseEl(a.index)); var b = c.type; h("BeforeChange", [a.currItem ? a.currItem.type : "", b]); a.currItem = c; if (!a.currTemplate[b]) { var d = a.st[b] ? a.st[b].markup : !1; h("FirstMarkupParse", d); a.currTemplate[b] = d ? e(d) : !0 } u && u !== c.type && a.container.removeClass("mfp-" + u + "-holder"); d = a["get" + b.charAt(0).toUpperCase() + b.slice(1)](c, a.currTemplate[b]); a.appendContent(d, b); c.preloaded = !0; h("Change", c); u = c.type; a.container.prepend(a.contentContainer);
            h("AfterChange")
        }, appendContent: function (c, b) { (a.content = c) ? a.st.showCloseBtn && a.st.closeBtnInside && !0 === a.currTemplate[b] ? a.content.find(".mfp-close").length || a.content.append(x()) : a.content = c : a.content = ""; h("BeforeAppend"); a.container.addClass("mfp-" + b + "-holder"); a.contentContainer.append(a.content) }, parseEl: function (c) {
            var b = a.items[c], d; b.tagName ? b = { el: e(b) } : (d = b.type, b = { data: b, src: b.src }); if (b.el) {
                for (var f = a.types, g = 0; g < f.length; g++) if (b.el.hasClass("mfp-" + f[g])) { d = f[g]; break } b.src = b.el.attr("data-mfp-src");
                b.src || (b.src = b.el.attr("href"))
            } b.type = d || a.st.type || "inline"; b.index = c; b.parsed = !0; a.items[c] = b; h("ElementParse", b); return a.items[c]
        }, addGroup: function (c, b) { var d = function (d) { d.mfpEl = this; a._openClick(d, c, b) }; b || (b = {}); b.mainEl = c; if (b.items) b.isObj = !0, c.off("click.magnificPopup").on("click.magnificPopup", d); else if (b.isObj = !1, b.delegate) c.off("click.magnificPopup").on("click.magnificPopup", b.delegate, d); else b.items = c, c.off("click.magnificPopup").on("click.magnificPopup", d) }, _openClick: function (c,
        b, d) { if ((void 0 !== d.midClick ? d.midClick : e.magnificPopup.defaults.midClick) || 2 !== c.which && !c.ctrlKey && !c.metaKey) { var f = void 0 !== d.disableOn ? d.disableOn : e.magnificPopup.defaults.disableOn; if (f) if (e.isFunction(f)) { if (!f.call(a)) return !0 } else if (q.width() < f) return !0; c.type && (c.preventDefault(), a.isOpen && c.stopPropagation()); d.el = e(c.mfpEl); d.delegate && (d.items = b.find(d.delegate)); a.open(d) } }, updateStatus: function (c, b) {
            if (a.preloader) {
                w !== c && a.container.removeClass("mfp-s-" + w); b || "loading" !== c || (b = a.st.tLoading);
                var d = { status: c, text: b }; h("UpdateStatus", d); c = d.status; b = d.text; a.preloader.html(b); a.preloader.find("a").on("click", function (a) { a.stopImmediatePropagation() }); a.container.addClass("mfp-s-" + c); w = c
            }
        }, _checkIfClose: function (c) {
            if (!e(c).hasClass("mfp-prevent-close")) {
                var b = a.st.closeOnContentClick, d = a.st.closeOnBgClick; if (b && d || !a.content || e(c).hasClass("mfp-close") || a.preloader && c === a.preloader[0]) return !0; if (c !== a.content[0] && !e.contains(a.content[0], c)) { if (d && e.contains(document, c)) return !0 } else if (b) return !0;
                return !1
            }
        }, _addClassToMFP: function (c) { a.bgOverlay.addClass(c); a.wrap.addClass(c) }, _removeClassFromMFP: function (c) { this.bgOverlay.removeClass(c); a.wrap.removeClass(c) }, _hasScrollBar: function (c) { return (a.isIE7 ? n.height() : document.body.scrollHeight) > (c || q.height()) }, _setFocus: function () { (a.st.focus ? a.content.find(a.st.focus).eq(0) : a.wrap).focus() }, _onFocusIn: function (c) { if (c.target !== a.wrap[0] && !e.contains(a.wrap[0], c.target)) return a._setFocus(), !1 }, _parseMarkup: function (a, b, d) {
            var f; d.data && (b = e.extend(d.data,
            b)); h("MarkupParse", [a, b, d]); e.each(b, function (b, d) { if (void 0 === d || !1 === d) return !0; f = b.split("_"); if (1 < f.length) { var e = a.find(".mfp-" + f[0]); if (0 < e.length) { var h = f[1]; "replaceWith" === h ? e[0] !== d[0] && e.replaceWith(d) : "img" === h ? e.is("img") ? e.attr("src", d) : e.replaceWith('<img src="' + d + '" class="' + e.attr("class") + '" />') : e.attr(f[1], d) } } else a.find(".mfp-" + b).html(d) })
        }, _getScrollbarSize: function () {
            if (void 0 === a.scrollbarSize) {
                var c = document.createElement("div"); c.style.cssText = "width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;";
                document.body.appendChild(c); a.scrollbarSize = c.offsetWidth - c.clientWidth; document.body.removeChild(c)
            } return a.scrollbarSize
        }
    }; e.magnificPopup = {
        instance: null, proto: t.prototype, modules: [], open: function (a, b) { y(); a = a ? e.extend(!0, {}, a) : {}; a.isObj = !0; a.index = b || 0; return this.instance.open(a) }, close: function () { return e.magnificPopup.instance && e.magnificPopup.instance.close() }, registerModule: function (a, b) { b.options && (e.magnificPopup.defaults[a] = b.options); e.extend(this.proto, b.proto); this.modules.push(a) },
        defaults: { disableOn: 0, key: null, midClick: !1, mainClass: "", preloader: !0, focus: "", closeOnContentClick: !1, closeOnBgClick: !0, closeBtnInside: !0, showCloseBtn: !0, enableEscapeKey: !0, modal: !1, alignTop: !1, removalDelay: 0, prependTo: null, fixedContentPos: "auto", fixedBgPos: "auto", overflowY: "auto", closeMarkup: '<button title="%title%" type="button" class="mfp-close">&times;</button>', tClose: "Close (Esc)", tLoading: "Loading..." }
    }; e.fn.magnificPopup = function (c) {
        y(); var b = e(this); if ("string" === typeof c) if ("open" === c) {
            var d,
            f = v ? b.data("magnificPopup") : b[0].magnificPopup, g = parseInt(arguments[1], 10) || 0; f.items ? d = f.items[g] : (d = b, f.delegate && (d = d.find(f.delegate)), d = d.eq(g)); a._openClick({ mfpEl: d }, b, f)
        } else a.isOpen && a[c].apply(a, Array.prototype.slice.call(arguments, 1)); else c = e.extend(!0, {}, c), v ? b.data("magnificPopup", c) : b[0].magnificPopup = c, a.addGroup(b, c); return b
    }; var z; e.magnificPopup.registerModule("zoom", {
        options: { enabled: !1, easing: "ease-in-out", duration: 300, opener: function (a) { return a.is("img") ? a : a.find("img") } },
        proto: {
            initZoom: function () {
                var c = a.st.zoom, b; if (c.enabled && a.supportsTransition) {
                    var d = c.duration, e = function (a) { a = a.clone().removeAttr("style").removeAttr("class").addClass("mfp-animated-image"); var b = { position: "fixed", zIndex: 9999, left: 0, top: 0, "-webkit-backface-visibility": "hidden" }; b["-webkit-transition"] = b["-moz-transition"] = b["-o-transition"] = b.transition = "all " + c.duration / 1E3 + "s " + c.easing; a.css(b); return a }, g = function () { a.content.css("visibility", "visible") }, k, p; l("BuildControls.zoom", function () {
                        a._allowZoom() &&
                        (clearTimeout(k), a.content.css("visibility", "hidden"), (b = a._getItemToZoom()) ? (p = e(b), p.css(a._getOffset()), a.wrap.append(p), k = setTimeout(function () { p.css(a._getOffset(!0)); k = setTimeout(function () { g(); setTimeout(function () { p.remove(); b = p = null; h("ZoomAnimationEnded") }, 16) }, d) }, 16)) : g())
                    }); l("BeforeClose.zoom", function () {
                        if (a._allowZoom()) {
                            clearTimeout(k); a.st.removalDelay = d; if (!b) { b = a._getItemToZoom(); if (!b) return; p = e(b) } p.css(a._getOffset(!0)); a.wrap.append(p); a.content.css("visibility", "hidden");
                            setTimeout(function () { p.css(a._getOffset()) }, 16)
                        }
                    }); l("Close.zoom", function () { a._allowZoom() && (g(), p && p.remove(), b = null) })
                }
            }, _allowZoom: function () { return "image" === a.currItem.type }, _getItemToZoom: function () { return a.currItem.hasSize ? a.currItem.img : !1 }, _getOffset: function (c) {
                var b; b = c ? a.currItem.img : a.st.zoom.opener(a.currItem.el || a.currItem); c = b.offset(); var d = parseInt(b.css("padding-top"), 10), f = parseInt(b.css("padding-bottom"), 10); c.top -= e(window).scrollTop() - d; b = {
                    width: b.width(), height: (v ? b.innerHeight() :
                    b[0].offsetHeight) - f - d
                }; void 0 === z && (z = void 0 !== document.createElement("p").style.MozTransform); z ? b["-moz-transform"] = b.transform = "translate(" + c.left + "px," + c.top + "px)" : (b.left = c.left, b.top = c.top); return b
            }
        }
    }); var A = function (c) { if (a.currTemplate.iframe) { var b = a.currTemplate.iframe.find("iframe"); b.length && (c || (b[0].src = "//about:blank"), a.isIE8 && b.css("display", c ? "block" : "none")) } }; e.magnificPopup.registerModule("iframe", {
        options: {
            markup: '<div class="mfp-iframe-scaler"><div class="mfp-close"></div><iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe></div>',
            srcAction: "iframe_src", patterns: { youtube: { index: "youtube.com", id: "v=", src: "//www.youtube.com/embed/%id%?autoplay=1" }, vimeo: { index: "vimeo.com/", id: "/", src: "//player.vimeo.com/video/%id%?autoplay=1" }, gmaps: { index: "//maps.google.", src: "%id%&output=embed" } }
        }, proto: {
            initIframe: function () { a.types.push("iframe"); l("BeforeChange", function (a, b, d) { b !== d && ("iframe" === b ? A() : "iframe" === d && A(!0)) }); l("Close.iframe", function () { A() }) }, getIframe: function (c, b) {
                var d = c.src, f = a.st.iframe; e.each(f.patterns, function () {
                    if (-1 <
                    d.indexOf(this.index)) return this.id && (d = "string" === typeof this.id ? d.substr(d.lastIndexOf(this.id) + this.id.length, d.length) : this.id.call(this, d)), d = this.src.replace("%id%", d), !1
                }); var g = {}; f.srcAction && (g[f.srcAction] = d); a._parseMarkup(b, g, c); a.updateStatus("ready"); return b
            }
        }
    }); var B = function (c) { var b = a.items.length; return c > b - 1 ? c - b : 0 > c ? b + c : c }, D = function (a, b, d) { return a.replace(/%curr%/gi, b + 1).replace(/%total%/gi, d) }; e.magnificPopup.registerModule("gallery", {
        options: {
            enabled: !1, arrowMarkup: '<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"></button>',
            preload: [0, 2], navigateByImgClick: !0, arrows: !0, tPrev: "Previous (Left arrow key)", tNext: "Next (Right arrow key)", tCounter: "%curr% of %total%"
        }, proto: {
            initGallery: function () {
                var c = a.st.gallery, b = !!e.fn.mfpFastClick; a.direction = !0; if (!c || !c.enabled) return !1; k += " mfp-gallery"; l("Open.mfp-gallery", function () { if (c.navigateByImgClick) a.wrap.on("click.mfp-gallery", ".mfp-img", function () { if (1 < a.items.length) return a.next(), !1 }); n.on("keydown.mfp-gallery", function (c) { 37 === c.keyCode ? a.prev() : 39 === c.keyCode && a.next() }) });
                l("UpdateStatus.mfp-gallery", function (c, b) { b.text && (b.text = D(b.text, a.currItem.index, a.items.length)) }); l("MarkupParse.mfp-gallery", function (b, e, g, h) { b = a.items.length; g.counter = 1 < b ? D(c.tCounter, h.index, b) : "" }); l("BuildControls.mfp-gallery", function () {
                    if (1 < a.items.length && c.arrows && !a.arrowLeft) {
                        var d = c.arrowMarkup, f = a.arrowLeft = e(d.replace(/%title%/gi, c.tPrev).replace(/%dir%/gi, "left")).addClass("mfp-prevent-close"), d = a.arrowRight = e(d.replace(/%title%/gi, c.tNext).replace(/%dir%/gi, "right")).addClass("mfp-prevent-close"),
                        g = b ? "mfpFastClick" : "click"; f[g](function () { a.prev() }); d[g](function () { a.next() }); a.isIE7 && (m("b", f[0], !1, !0), m("a", f[0], !1, !0), m("b", d[0], !1, !0), m("a", d[0], !1, !0)); a.container.append(f.add(d))
                    }
                }); l("Change.mfp-gallery", function () { a._preloadTimeout && clearTimeout(a._preloadTimeout); a._preloadTimeout = setTimeout(function () { a.preloadNearbyImages(); a._preloadTimeout = null }, 16) }); l("Close.mfp-gallery", function () {
                    n.off(".mfp-gallery"); a.wrap.off("click.mfp-gallery"); a.arrowLeft && b && a.arrowLeft.add(a.arrowRight).destroyMfpFastClick();
                    a.arrowRight = a.arrowLeft = null
                })
            }, next: function () { a.direction = !0; a.index = B(a.index + 1); a.updateItemHTML() }, prev: function () { a.direction = !1; a.index = B(a.index - 1); a.updateItemHTML() }, goTo: function (c) { a.direction = c >= a.index; a.index = c; a.updateItemHTML() }, preloadNearbyImages: function () { var c = a.st.gallery.preload, b = Math.min(c[0], a.items.length), c = Math.min(c[1], a.items.length), d; for (d = 1; d <= (a.direction ? c : b) ; d++) a._preloadItem(a.index + d); for (d = 1; d <= (a.direction ? b : c) ; d++) a._preloadItem(a.index - d) }, _preloadItem: function (c) {
                c =
                B(c); if (!a.items[c].preloaded) { var b = a.items[c]; b.parsed || (b = a.parseEl(c)); h("LazyLoad", b); "image" === b.type && (b.img = e('<img class="mfp-img" />').on("load.mfploader", function () { b.hasSize = !0 }).on("error.mfploader", function () { b.hasSize = !0; b.loadError = !0; h("LazyLoadError", b) }).attr("src", b.src)); b.preloaded = !0 }
            }
        }
    }); (function () {
        var a = "ontouchstart" in window, b = function () { q.off("touchmove" + d + " touchend" + d) }, d = ".mfpFastClick"; e.fn.mfpFastClick = function (f) {
            return e(this).each(function () {
                var g = e(this), h; if (a) {
                    var k,
                    l, n, m, r, t; g.on("touchstart" + d, function (a) { m = !1; t = 1; r = a.originalEvent ? a.originalEvent.touches[0] : a.touches[0]; l = r.clientX; n = r.clientY; q.on("touchmove" + d, function (a) { r = a.originalEvent ? a.originalEvent.touches : a.touches; t = r.length; r = r[0]; if (10 < Math.abs(r.clientX - l) || 10 < Math.abs(r.clientY - n)) m = !0, b() }).on("touchend" + d, function (a) { b(); m || 1 < t || (h = !0, a.preventDefault(), clearTimeout(k), k = setTimeout(function () { h = !1 }, 1E3), f()) }) })
                } g.on("click" + d, function () { h || f() })
            })
        }; e.fn.destroyMfpFastClick = function () {
            e(this).off("touchstart" +
            d + " click" + d); a && q.off("touchmove" + d + " touchend" + d)
        }
    })(); y()
});