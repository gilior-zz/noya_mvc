var youmaxLoggedInUser = {}, layoutResizeTimer, $youmaxGrid, getYouTubePlaylistVideos = function (a, b, c, d) {
    var e = "", f = !1, g = !0, k = !1, h = d.data("youmax_global_options"); null != c && (e = "&pageToken=" + c, f = !0, g = !1); -1 != h.loadMode.indexOf("paginate") && f && (f = !1, k = !0); apiPlaylistVideosURL = "https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=" + a + "&maxResults=" + h.maxResults + e + "&key=" + h.apiKey; $.ajax({
        url: apiPlaylistVideosURL, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (a) {
            updateCache("youtube",
            a, d, g, f, k, b)
        }, error: function (a) { alert(a) }, beforeSend: setHeader
    })
}, getVimeoUserVideos = function (a, b, c, d) {
    var e = "", f = !1, g = !0, k = !1, h = d.data("youmax_global_options"); null != c && (e = "&" + c, f = !0, g = !1); -1 != h.loadMode.indexOf("paginate") && f && (f = !1, k = !0); apiVimeoVideosURL = "https://api.vimeo.com/users/" + a + "/videos?access_token=" + h.vimeoAccessToken + "&per_page=" + h.maxResults + e; $.ajax({
        url: apiVimeoVideosURL, type: "GET", async: !0, cache: !0, dataType: "json", success: function (a) { updateCache("vimeo", a, d, g, f, k, b) }, error: function (a) { alert(a) },
        beforeSend: setHeader
    })
}, getVimeoChannelVideos = function (a, b, c, d) { var e = "", f = !1, g = !0, k = !1, h = d.data("youmax_global_options"); null != c && (e = "&" + c, f = !0, g = !1); -1 != h.loadMode.indexOf("paginate") && f && (f = !1, k = !0); apiVimeoVideosURL = "https://api.vimeo.com/channels/" + a + "/videos?access_token=" + h.vimeoAccessToken + "&per_page=" + h.maxResults + e; $.ajax({ url: apiVimeoVideosURL, type: "GET", async: !0, cache: !0, dataType: "json", success: function (a) { updateCache("vimeo", a, d, g, f, k, b) }, error: function (a) { alert(a) }, beforeSend: setHeader }) },
getVimeoGroupVideos = function (a, b, c, d) { var e = "", f = !1, g = !0, k = !1, h = d.data("youmax_global_options"); null != c && (e = "&" + c, f = !0, g = !1); -1 != h.loadMode.indexOf("paginate") && f && (f = !1, k = !0); apiVimeoVideosURL = "https://api.vimeo.com/groups/" + a + "/videos?access_token=" + h.vimeoAccessToken + "&per_page=" + h.maxResults + e; $.ajax({ url: apiVimeoVideosURL, type: "GET", async: !0, cache: !0, dataType: "json", success: function (a) { updateCache("vimeo", a, d, g, f, k, b) }, error: function (a) { alert(a) }, beforeSend: setHeader }) }, getVimeoAlbumVideos = function (a,
b, c, d) { var e = "", f = !1, g = !0, k = !1, h = d.data("youmax_global_options"); null != c && (e = "&" + c, f = !0, g = !1); -1 != h.loadMode.indexOf("paginate") && f && (f = !1, k = !0); apiVimeoVideosURL = "https://api.vimeo.com/albums/" + a + "/videos?access_token=" + h.vimeoAccessToken + "&per_page=" + h.maxResults + e; $.ajax({ url: apiVimeoVideosURL, type: "GET", async: !0, cache: !0, dataType: "json", success: function (a) { updateCache("vimeo", a, d, g, f, k, b) }, error: function (a) { alert(a) }, beforeSend: setHeader }) }, getYouTubeChannelEvents = function (a, b, c, d) {
    var e = "", f =
    !1, g = !0, k = !1, h = d.data("youmax_global_options"); null != c && (e = "&pageToken=" + c, f = !0, g = !1); -1 != h.loadMode.indexOf("paginate") && f && (f = !1, k = !0); g ? (eventCache = { items: [], nextPageToken: "youmax-generated" }, eventCacheStatus = [], d.data("eventcache", eventCache), d.data("eventcachestatus", eventCacheStatus), apiEventVideosURL = "https://www.googleapis.com/youtube/v3/search?part=snippet&eventType=live&order=date&channelId=" + a + "&type=video&maxResults=50&key=" + h.apiKey, $.ajax({
        url: apiEventVideosURL, type: "GET", async: !0, cache: !0,
        dataType: "jsonp", success: function (a) { eventCacheCollector(a, d, "live", b) }, error: function (a) { alert(a) }, beforeSend: setHeader
    }), setTimeout(function () { apiEventVideosURL = "https://www.googleapis.com/youtube/v3/search?part=snippet&eventType=upcoming&order=date&channelId=" + a + "&type=video&maxResults=50&key=" + h.apiKey; $.ajax({ url: apiEventVideosURL, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (a) { eventCacheCollector(a, d, "upcoming", b) }, error: function (a) { alert(a) }, beforeSend: setHeader }) }, 200), setTimeout(function () {
        -1 !=
        h.loadMode.indexOf("paginate") && (maxResults = 50); apiEventVideosURL = "https://www.googleapis.com/youtube/v3/search?part=snippet&eventType=completed&order=date&channelId=" + a + "&type=video&maxResults=" + h.maxResults + "&key=" + h.apiKey; $.ajax({ url: apiEventVideosURL, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (a) { eventCacheCollector(a, d, "completed", b) }, error: function (a) { alert(a) }, beforeSend: setHeader })
    }, 400)) : (apiEventVideosURL = "https://www.googleapis.com/youtube/v3/search?part=snippet&eventType=completed&order=date&channelId=" +
    a + "&type=video&maxResults=" + h.maxResults + e + "&key=" + h.apiKey, $.ajax({ url: apiEventVideosURL, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (a) { setEvent(a); updateCache("youtube", a, d, g, f, k, b) }, error: function (a) { alert(a) }, beforeSend: setHeader }))
}, setEvent = function (a) { if (null != a.items) for (var b = 0; b < a.items.length; b++) a.items[b].isEvent = !0 }, eventCacheCollector = function (a, b, c, d) {
    eventCache = b.data("eventcache"); eventCacheStatus = b.data("eventcachestatus"); b.data("youmax_global_options"); null !=
    a.items && 0 < a.items.length && (eventCache.items = eventCache.items.concat(a.items)); "completed" == c && (eventCache.nextPageToken = a.nextPageToken); eventCacheStatus.push(c); 3 <= eventCacheStatus.length && -1 != eventCacheStatus.indexOf("live") && -1 != eventCacheStatus.indexOf("upcoming") && -1 != eventCacheStatus.indexOf("completed") && (setEvent(eventCache), updateCache("youtube", eventCache, b, !0, !1, !1, d)); b.data("eventcache", eventCache); b.data("eventcachestatus", eventCacheStatus)
}, getYoutubeVideoDetails = function (a, b, c, d) {
    var e =
    b.data("youmax_global_options"), f = b.data("youmax_translator_text"); apiVideoDetailURL = "https://www.googleapis.com/youtube/v3/videos?part=statistics%2Csnippet&id=" + a + "&key=" + e.apiKey; $.ajax({
        url: apiVideoDetailURL, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (e) {
            $baseElement = $('<div id="youtube_' + a + '"><div class="youmax-video-list-title">' + e.items[0].snippet.title + '</div><div class="youmax-video-list-date">' + getDateDiff(e.items[0].snippet.publishedAt, f) + "</div></div>"); videoDescription =
            e.items[0].snippet.description.replace(/"/g, "'"); videoDescription = processDescription(videoDescription); $baseElement.data("description", videoDescription); videoLink = "https://www.youtube.com/watch?v=" + a; $baseElement.data("link", videoLink); $baseElement.data("likes", convertLikeCommentCount(e.items[0].statistics.likeCount)); $baseElement.data("views", convertViewCountForThumbnail(e.items[0].statistics.viewCount)); $baseElement.data("channelid", e.items[0].snippet.channelId); displayInlineVideo($baseElement,
            c, d, b)
        }, error: function (a) { alert(a) }, beforeSend: setHeader
    })
}, getVimeoVideoDetails = function (a, b, c, d) {
    var e = b.data("youmax_global_options"), f = b.data("youmax_translator_text"); apiVideoDetailURL = "https://api.vimeo.com/videos/" + a + "?access_token=" + e.vimeoAccessToken; $.ajax({
        url: apiVideoDetailURL, type: "GET", async: !0, cache: !0, dataType: "json", success: function (e) {
            videoDescription = e.description.replace(/"/g, "'"); videoDescription = processDescription(videoDescription); videoViewCount = e.stats.plays; videoViewCount =
            null == videoViewCount ? "Private" : convertViewCountForThumbnail(videoViewCount); $baseElement = $('<div id="vimeo_' + a + '"><div class="youmax-video-list-title">' + e.name + '</div><div class="youmax-video-list-date">' + getDateDiff(e.created_time, f) + "</div></div>"); videoLink = "https://vimeo.com/" + a; $baseElement.data("link", videoLink); $baseElement.data("description", videoDescription); $baseElement.data("likes", convertLikeCommentCount(e.metadata.connections.likes.total)); $baseElement.data("comments", convertLikeCommentCount(e.metadata.connections.comments.total));
            $baseElement.data("views", convertViewCountForThumbnail(videoViewCount)); $baseElement.data("channelid", ""); displayInlineVideo($baseElement, c, d, b)
        }, error: function (a) { alert(a) }, beforeSend: setHeader
    })
}, getYoutubeVideoComments = function (a, b, c) {
    var d = "", e = !1, f = b.data("youmax_global_options"), g = f.apiKey, k = f.maxComments; null != c && (d = "&pageToken=" + c, e = !0); apiVideoCommentsURL = "https://www.googleapis.com/youtube/v3/commentThreads?part=id%2Csnippet&textFormat=plainText&videoId=" + a + d + "&maxResults=" + k + "&key=" + g +
    "&order=" + f.commentOrder; console.log("getVideoComments apiVideoCommentsURL-" + apiVideoCommentsURL); $.ajax({ url: apiVideoCommentsURL, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (a) { insertVideoComments(a, e, b) }, error: function (a) { }, beforeSend: setHeader })
}, getVimeoVideoComments = function (a, b, c) {
    var d = "", e = !1, f = b.data("youmax_global_options"), g = f.maxComments; null != c && (d = "&" + c, e = !0); apiVideoCommentsURL = "https://api.vimeo.com/videos/" + a + "/comments?per_page=" + g + "&access_token=" + f.vimeoAccessToken +
    "&sort=date" + d; $.ajax({ url: apiVideoCommentsURL, type: "GET", async: !0, cache: !0, dataType: "json", success: function (a) { insertVimeoVideoComments(a, e, b) }, error: function (a) { alert(a) }, beforeSend: setHeader })
}, renderSubscribeButton = function () { $.ajaxSetup({ cache: !0 }); $.getScript("https://apis.google.com/js/platform.js").done(function (a, b) { }).fail(function (a, b, c) { }) }, getYouTubeChannelPlaylists = function (a, b, c, d) {
    var e = "", f = !1, g = !0, k = !1, h = d.data("youmax_global_options"); null != c && (e = "&pageToken=" + c, f = !0, g = !1); -1 !=
    h.loadMode.indexOf("paginate") && f && (f = !1, k = !0); d.data("youmax_last_channel_playlists", "youtube_channel_playlists_" + a); apiChannelPlaylistsURL = "https://www.googleapis.com/youtube/v3/playlists?part=contentDetails,snippet&channelId=" + a + "&maxResults=" + h.maxResults + e + "&key=" + h.apiKey; $.ajax({ url: apiChannelPlaylistsURL, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (a) { updateCache("youtube", a, d, g, f, k, b) }, error: function (a) { alert(a) }, beforeSend: setHeader })
}, getYouTubePlaylistChannel = function (a,
b, c) { var d = c.data("youmax_global_options"); apiUrl = "https://www.googleapis.com/youtube/v3/playlists?part=snippet%2CcontentDetails&id=" + a + "&key=" + d.apiKey; $.ajax({ url: apiUrl, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (a) { channelId = a.items[0].snippet.channelId; getYouTubeChannelDetails(channelId, b, c) }, error: function (a) { alert(a) }, beforeSend: setHeader }) }, getVimeoAlbumDetails = function (a, b, c) {
    var d = c.data("youmax_global_options"); apiUrl = "https://api.vimeo.com/albums/" + a + "?access_token=" +
    d.vimeoAccessToken; $.ajax({ url: apiUrl, type: "GET", async: !0, cache: !0, dataType: "json", success: function (a) { userLink = a.user.link; userName = a.user.name; userImage = a.user.pictures.sizes[1].link; $tab = c.find("#" + b); $tab.data("username", userName); $tab.data("userimage", userImage); $tab.data("userlink", userLink) }, error: function (a) { }, beforeSend: setHeader })
}, getVimeoChannelDetails = function (a, b, c) {
    var d = c.data("youmax_global_options"); apiUrl = "https://api.vimeo.com/channels/" + a + "?access_token=" + d.vimeoAccessToken; $.ajax({
        url: apiUrl,
        type: "GET", async: !0, cache: !0, dataType: "json", success: function (a) { userLink = a.link; userName = a.name; userImage = a.pictures.sizes[0].link; $tab = c.find("#" + b); $tab.data("username", userName); $tab.data("userimage", userImage); $tab.data("userlink", userLink) }, error: function (a) { }, beforeSend: setHeader
    })
}, getVimeoGroupDetails = function (a, b, c) {
    var d = c.data("youmax_global_options"); apiUrl = "https://api.vimeo.com/groups/" + a + "?access_token=" + d.vimeoAccessToken; $.ajax({
        url: apiUrl, type: "GET", async: !0, cache: !0, dataType: "json",
        success: function (a) { userLink = a.link; userName = a.name; userImage = a.pictures.sizes[0].link; userImage = a.header.sizes[0].link; $tab = c.find("#" + b); $tab.data("username", userName); $tab.data("userimage", userImage); $tab.data("userlink", userLink) }, error: function (a) { }, beforeSend: setHeader
    })
}, getVimeoUserDetails = function (a, b, c) {
    var d = c.data("youmax_global_options"); apiUrl = "https://api.vimeo.com/users/" + a + "?access_token=" + d.vimeoAccessToken; $.ajax({
        url: apiUrl, type: "GET", async: !0, cache: !0, dataType: "json", success: function (a) {
            userLink =
            a.link; userName = a.name; userImage = a.pictures.sizes[1].link; $tab = c.find("#" + b); $tab.data("username", userName); $tab.data("userimage", userImage); $tab.data("userlink", userLink)
        }, error: function (a) { }, beforeSend: setHeader
    })
}, getYouTubeChannelDetails = function (a, b, c) {
    var d = c.data("youmax_global_options"); apiUrl = "https://www.googleapis.com/youtube/v3/channels?part=brandingSettings%2Csnippet%2Cstatistics%2CcontentDetails&id=" + a + "&key=" + d.apiKey; $.ajax({
        url: apiUrl, type: "GET", async: !0, cache: !0, dataType: "jsonp",
        success: function (a) { userLink = "https://youtube.com/channel/" + a.items[0].id; userName = a.items[0].snippet.title; userImage = a.items[0].snippet.thumbnails["default"].url; $tab = c.find("#" + b); $tab.data("username", userName); $tab.data("userimage", userImage); $tab.data("userlink", userLink) }, error: function (a) { alert(a) }, beforeSend: setHeader
    })
}, initYoumax = function (a) {
    var b = a.data("youmax_global_options"); a.empty(); a.append('<div id="youmax-header"><div id="youmax-header-wrapper"></div></div>'); a.append('<div id="youmax-tabs"></div>');
    a.append('<div id="youmax-select-box"><select id="youmax-select"></select></div>'); b.showTopAdSpace && a.append('<div class="youmax-ad-space">' + b.topAdHtml + "</div>"); "popup" != b.displayVideo && a.append('<div id="youmax-encloser"></div>'); a.append('<div id="youmax-showing-title"></div>'); var c = ""; "paginate-sides" == b.loadMode && (c = "youmax-small-container"); a.append('<div id="youmax-video-list-div" class="' + c + '"><ul id="tiles"></ul></div>'); var d = c = null, e = null, f = ""; "small" == b.loadButtonSize && (f = 'class="youmax-small"');
    "loadmore" == b.loadMode ? (a.append('<button type="button" id="youmax-load-more-div" ' + f + "></button>"), c = a.find("#youmax-load-more-div")) : "paginate-bottom" == b.loadMode ? (a.append('<div class="youmax-pagination"><div class="youmax-pagination-button-wrapper youmax-left-wrapper"><button type="button" id="youmax-previous-div" ' + f + '></button></div><div class="youmax-pagination-button-wrapper youmax-right-wrapper"><button type="button" id="youmax-next-div" ' + f + "></button></div></div>"), e = a.find("#youmax-next-div"),
    d = a.find("#youmax-previous-div")) : "paginate-sides" == b.loadMode && (a.append('<div class="youmax-pagination-button-wrapper youmax-left-wrapper youmax-side-nav"><button type="button" id="youmax-previous-div" ' + f + '></button></div><div class="youmax-pagination-button-wrapper youmax-right-wrapper youmax-side-nav"><button type="button" id="youmax-next-div" ' + f + "></button></div>"), e = a.find("#youmax-next-div"), d = a.find("#youmax-previous-div")); resetLoadMoreButton(a); null != c && (c.data("nextpagetoken", ""), c.click(function () {
        paginationWrapper(a,
        "more")
    })); null != d && d.click(function () { paginationWrapper(a, "previous") }); null != e && e.click(function () { paginationWrapper(a, "next") }); a.find("#youmax-tabs").on("click", ".youmax-tab", function () { a.find("#youmax-load-more-div").removeAttr("disabled"); displayItems(this.id, a) }); a.find("#youmax-select").change(function () { var b = $(this).find(":selected").val(); displayItems(b, a) }); "popup" == b.displayVideo ? ($youmaxPlayBox = $("body"), $youmaxPlayBox.off("click", ".youmax-show-button"), $youmaxPlayBox.off("click", ".youmax-add-comment-button")) :
    $youmaxPlayBox = a; $youmaxPlayBox.on("click", ".youmax-show-button", function () { displayComments(this.id, a) }); $youmaxPlayBox.on("click", ".youmax-more-button", function () { loadMoreComments(a) }); $.getScript("https://apis.google.com/js/client:platform.js").done(function (b, c) { $youmaxPlayBox.on("click", ".youmax-add-comment-button", function () { handleComments(this, a) }) }).fail(function (a, b, c) { }); a.on("keyup", "#youmax-search-box,#youmax-search-box-header", function (b) {
        if (13 == b.keyCode) return searchText = "query_" + $(this).val().replace(/ /g,
        "_"), displayItems(searchText, a), !1
    }); -1 != b.skin.indexOf("clean") ? (a.on("mouseenter", "#tiles li", function () { $(this).find(".youmax-duration").show(); $(this).find(".youmax-definition").show(); $(this).find(".youmax-clean-overlay-holder").hide() }), a.on("mouseleave", "#tiles li", function () { $(this).find(".youmax-duration").hide(); $(this).find(".youmax-definition").hide(); $(this).find(".youmax-clean-overlay-holder").show() })) : "thumbnail" != b.displayVideo && (b.playIconType && "default" != b.playIconType ? (a.on("mouseenter",
    ".youmax-thumbnail-image-wrapper", function () { $(this).find(".youmax-play-overlay").addClass("youmax-play-hover") }), a.on("mouseleave", ".youmax-thumbnail-image-wrapper", function () { $(this).find(".youmax-play-overlay").removeClass("youmax-play-hover") })) : (a.on("mouseenter", ".youmax-thumbnail-image-wrapper", function () { $(this).find(".youmax-play-overlay").show() }), a.on("mouseleave", ".youmax-thumbnail-image-wrapper", function () { $(this).find(".youmax-play-overlay").hide() }))); a.on("click", "#youmax-back-to-playlists",
    function () { var b = a.data("youmax_last_channel_playlists"); a.find("#" + b).click() }); a.on("click", "#youmax-search-holder-header", function () { $(this).find("#youmax-search-box-header").toggle() }); a.on("click", "#youmax-search-box-header", function (a) { return !1 }); $(window).resize(function () {
        clearTimeout(layoutResizeTimer); layoutResizeTimer = setTimeout(function () {
            $("body").find(".youmax").each(function () { $ymaxContainer = $(this); setMediaQueries($ymaxContainer.width(), $ymaxContainer) }); setTimeout(function () {
                $("body").find(".youmax").each(function () {
                    $ymaxContainer =
                    $(this); ymax_global_options = $ymaxContainer.data("youmax_global_options"); -1 != ymax_global_options.skin.indexOf("trend") && 280 > $ymaxContainer.find("#tiles li:first-child").width() ? $ymaxContainer.find(".youmax-video-list-date").hide() : $ymaxContainer.find(".youmax-video-list-date").show(); $ymaxContainer.find("ul").masonry("layout")
                })
            }, b.updateLayoutDelay)
        }, b.updateLayoutDelay)
    }); $(window).on("load", function () {
        setTimeout(function () { $("body").find(".youmax").each(function () { $(this).find("ul").masonry("layout") }) },
        b.updateLayoutDelay)
    })
}, paginationWrapper = function (a, b) { "previous" == b ? pauseLoadMoreButton(a, "previous") : pauseLoadMoreButton(a); var c = a.find(".youmax-tab-hover").attr("id"); if ("more" == b) handlePagination(a, b, !1, !0, !1, c); else { $youmaxContainerList = a.find("ul#tiles"); var d = $youmaxContainerList.height(); $youmaxContainerList.parent("#youmax-video-list-div").css("min-height", d); $youmaxContainerList.find("li").addClass("youmax-dying"); handlePagination(a, b, !1, !1, !0, c) } }, handlePagination = function (a, b, c, d, e,
f) {
    var g = { items: [], nextPageToken: "youmax-generated" }, k = { data: [], paging: { next: "youmax-generated" } }; cache = a.data("cache"); cacheIndex = a.data("cacheindex"); var h = a.data("youmax_global_options"); onScreenItems = a.find("#tiles>li").length; if ("previous" == b) 0 <= cacheIndex - onScreenItems - h.maxResults ? (cacheIndex = cacheIndex - onScreenItems - h.maxResults, 0 > cacheIndex && (cacheIndex = 0), g.items = cache.slice(cacheIndex, cacheIndex + h.maxResults), k.data = cache.slice(cacheIndex, cacheIndex + h.maxResults), tunnelCachedResults(f,
    a, c, d, e, g, k), cacheIndex += h.maxResults) : (h.showTextInsteadOfIcons ? a.find("#youmax-previous-div").removeClass("youmax-load-more-div-click").html("Done") : a.find("#youmax-previous-div").removeClass("youmax-load-more-div-click").html('<i class="fa fa-close fa-5x"></i>'), a.find("ul#tiles li").removeClass("youmax-dying").fadeTo(0, 1)); else if ("next" == b || "more" == b) cacheIndex + h.maxResults > cache.length ? ("next" == b ? $youmaxLoadMoreDiv = a.find("#youmax-next-div") : "more" == b && ($youmaxLoadMoreDiv = a.find("#youmax-load-more-div")),
    b = $youmaxLoadMoreDiv.data("nextpagetoken"), null == b || "undefined" == b || "" == b ? cache.length > cacheIndex ? (g.items = cache.slice(cacheIndex, cache.length), k.data = cache.slice(cacheIndex, cache.length), tunnelCachedResults(f, a, c, d, e, g, k), cacheIndex = cache.length) : deactivateLoadMoreButton(a) : loadMoreItems(a, $youmaxLoadMoreDiv)) : (g.items = cache.slice(cacheIndex, cacheIndex + h.maxResults), k.data = cache.slice(cacheIndex, cacheIndex + h.maxResults), tunnelCachedResults(f, a, c, d, e, g, k), cacheIndex += h.maxResults), 0 > cacheIndex && (cacheIndex =
    0); a.data("cache", cache); a.data("cacheindex", cacheIndex)
}, tunnelCachedResults = function (a, b, c, d, e, f, g) {
    var k = b.data("youmax_global_options"); setTimeout(function () {
        -1 != a.indexOf("youtube_channel_uploads_") ? insertYouTubeVideos(f, b, c, d, e) : -1 != a.indexOf("youtube_channel_playlists_") ? insertYouTubeChannelPlaylists(f, b, c, d, e) : -1 != a.indexOf("youtube_playlist_videos_") ? insertYouTubeVideos(f, b, c, d, e) : -1 != a.indexOf("youtube_channel_events_") ? insertYouTubeSearchVideos(f, b, !1, c, d, e) : -1 != a.indexOf("youtube_channel_search_") ?
        insertYouTubeSearchVideos(f, b, !1, c, d, e) : -1 != a.indexOf("query_") ? insertUserSearchVideos(f, b, c, d, e, a) : -1 != a.indexOf("vimeo_user_videos_") ? insertVimeoVideos(g, b, c, d, e) : -1 != a.indexOf("vimeo_channel_videos_") ? insertVimeoVideos(g, b, c, d, e) : -1 != a.indexOf("vimeo_group_videos_") ? insertVimeoVideos(g, b, c, d, e) : -1 != a.indexOf("vimeo_album_videos_") && insertVimeoVideos(g, b, c, d, e)
    }, k.minimumFadeTimeout)
}, handleComments = function (a, b) {
    $(a).html('<i class="fa fa-ellipsis-h fa-2x"></i>').attr("disabled", "disabled"); var c =
    b.data("youmax_global_options"); $youmaxPlayBox = "popup" == c.displayVideo ? $(".youmax-popup.mfp-gallery") : b; var d = youmaxLoggedInUser.youmaxAccessToken; if (null != d && "" != d) {
        var e = $youmaxPlayBox.find(".youmax-comment-textbox").val(); null == e || "" == e.trim() ? (alert("Please enter a valid comment.."), $youmaxPlayBox.find(".youmax-add-comment-button").removeAttr("disabled").html('<i class="fa fa-send fa-2x"></i>')) : (e = e.trim(), videoId = $youmaxPlayBox.find(".youmax-encloser-comment-button.youmax-show-button").attr("id"),
        channelId = $youmaxPlayBox.find(".youmax-encloser-comment-button.youmax-show-button").data("channelid"), videoId = videoId.substring(videoId.indexOf("_") + 1), youmaxPostComment(b, videoId, d, c.apiKey, e, channelId))
    } else gapi.auth.signIn({ clientid: c.clientId, cookiepolicy: "single_host_origin", callback: "youmaxSaveToken", scope: "https://www.googleapis.com/auth/youtube.force-ssl" })
}, youmaxPostComment = function (a, b, c, d, e, f) {
    d = "https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&shareOnGooglePlus=false&fields=snippet&key=" +
    a.data("youmax_global_options").apiKey; var g = '{"snippet":{"channelId":"' + f + '","videoId":"' + b + '","topLevelComment":{"snippet":{"textOriginal":"' + e + '"}}}}'; $.ajax({
        url: d, type: "post", crossDomain: !0, data: g, beforeSend: function (a) { a.setRequestHeader("Authorization", "Bearer " + c); a.setRequestHeader("Content-Type", "application/json"); a.setRequestHeader("Content-Length", g.length) }, success: function (b, c) {
            var d = b.snippet.topLevelComment.snippet.authorDisplayName, f = b.snippet.topLevelComment.snippet.authorProfileImageUrl,
            g = a.data("youmax_translator_text"); $youmaxPlayBox = "popup" == a.data("youmax_global_options").displayVideo ? $(".youmax-popup.mfp-gallery") : a; $youmaxPlayBox.find("#youmax-encloser-comments").prepend('<div  class="youmax-video-comment"><div class="youmax-from"><div class="youmax-from-img" style="background-image:url(\'' + f + '\');"></div><div class="youmax-from-name">' + d + '</div><div class="youmax-published">' + g.now + '</div></div><div class="youmax-comment"><span class="youmax-comment-content">' + e + "</span><div></div>");
            $youmaxPlayBox.find(".youmax-add-comment-button").removeAttr("disabled").html('<i class="fa fa-send fa-2x"></i>'); $youmaxPlayBox.find(".youmax-comment-textbox").val("")
        }, error: function (a, b, c) { alert("Could not Post - " + c) }
    })
}, loadMoreItems = function (a) {
    $youmaxLoadMoreDiv = pauseLoadMoreButton(a); a.find("#youmax-encloser").empty().hide(); var b = a.find(".youmax-tab.youmax-tab-hover").attr("id"), c = $youmaxLoadMoreDiv.data("nextpagetoken"); null != c && "undefined" != c && "" != c ? -1 != b.indexOf("youtube_channel_uploads_") ?
    (innerId = b.substring(24), getYouTubePlaylistVideos(innerId, b, c, a)) : -1 != b.indexOf("youtube_channel_playlists_") ? (innerId = b.substring(26), getYouTubeChannelPlaylists(innerId, b, c, a)) : -1 != b.indexOf("youtube_channel_search_") ? getSearchVideos(b, c, a) : -1 != b.indexOf("youtube_channel_events_") ? (innerId = b.substring(23), getYouTubeChannelEvents(innerId, b, c, a)) : -1 != b.indexOf("youtube_playlist_videos_") ? (innerId = b.substring(24), getYouTubePlaylistVideos(innerId, b, c, a)) : -1 != b.indexOf("vimeo_user_videos_") ? (innerId =
    b.substring(18), getVimeoUserVideos(innerId, b, c, a)) : -1 != b.indexOf("vimeo_channel_videos_") ? (innerId = b.substring(21), getVimeoChannelVideos(innerId, b, c, a)) : -1 != b.indexOf("vimeo_group_videos_") ? (innerId = b.substring(19), getVimeoGroupVideos(innerId, b, c, a)) : -1 != b.indexOf("vimeo_album_videos_") ? (innerId = b.substring(19), getVimeoAlbumVideos(innerId, b, c, a)) : -1 != b.indexOf("query_") && (innerId = b.substring(6), getUserSearchVideos(innerId, b, c, a)) : deactivateLoadMoreButton(a)
}, pauseLoadMoreButton = function (a, b) {
    var c,
    d = a.data("youmax_global_options"), e = a.data("youmax_translator_text"); d.showTextInsteadOfIcons ? "loadmore" == d.loadMode ? (c = a.find("#youmax-load-more-div"), c.html(e.loading)) : -1 != d.loadMode.indexOf("paginate") && (c = "previous" == b ? a.find("#youmax-previous-div") : a.find("#youmax-next-div"), c.html(e.loading)) : "loadmore" == d.loadMode ? (c = a.find("#youmax-load-more-div"), c.html('<i class="fa fa-ellipsis-h fa-5x"></i>')) : -1 != d.loadMode.indexOf("paginate") && (c = "previous" == b ? a.find("#youmax-previous-div") : a.find("#youmax-next-div"),
    c.html('<i class="fa fa-ellipsis-h fa-5x"></i>')); c.addClass("youmax-load-more-div-click"); return c
}, deactivateLoadMoreButton = function (a) {
    var b, c = a.data("youmax_global_options"), d = a.data("youmax_translator_text"); c.showTextInsteadOfIcons ? "loadmore" == c.loadMode ? (b = a.find("#youmax-load-more-div"), b.html(d.done)) : -1 != c.loadMode.indexOf("paginate") && (b = a.find("#youmax-next-div"), b.html(d.done), a.find("ul#tiles li").removeClass("youmax-dying").fadeTo(0, 1)) : "loadmore" == c.loadMode ? (b = a.find("#youmax-load-more-div"),
    b.html('<i class="fa fa-close fa-5x"></i>')) : -1 != c.loadMode.indexOf("paginate") && (b = a.find("#youmax-next-div"), b.html('<i class="fa fa-close fa-5x"></i>'), a.find("ul#tiles li").removeClass("youmax-dying").fadeTo(0, 1)); b.removeClass("youmax-load-more-div-click")
}, getChannelDetails = function (a, b) {
    var c = b.data("youmax_global_options"), d = c.apiKey; c.channelId = a; apiUrl = "https://www.googleapis.com/youtube/v3/channels?part=brandingSettings%2Csnippet%2Cstatistics%2CcontentDetails&id=" + a + "&key=" + d; $.ajax({
        url: apiUrl,
        type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (a) { displayChannelHeader(a, b) }, error: function (a) { alert(a) }, beforeSend: setHeader
    })
}, getChannelId = function (a, b) { $.ajax({ url: a, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (a) { getChannelDetails(a.items[0].id, b) }, error: function (a) { alert(a) }, beforeSend: setHeader }) }, getChannelIdForTabs = function (a, b, c, d) {
    var e = c.data("youmax_global_options"); apiUrl = "https://www.googleapis.com/youtube/v3/channels?part=id&forUsername=" + a + "&key=" +
    e.apiKey; $.ajax({
        url: apiUrl, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (f) {
            f = f.items[0].id; -1 != b.indexOf("youtube_channel_search_") ? (c.find("#" + b).attr("data-restricttochannels", f), c.find("#" + b).data("restricttochannels", f), c.find('option[value="' + b + '"]').attr("data-restricttochannels", f), c.find('option[value="' + b + '"]').data("restricttochannels", f), d && c.find("#" + b).click(), getYouTubeChannelDetails(f, b, c)) : (c.find("#" + b + a).attr("id", b + f), c.find('option[value="' + b + a + '"]').attr("value",
            b + f), "youtube_channel_uploads_" == b ? getUploadsPlaylistIdForTabs(f, b, c, d) : (d && c.find("#" + b + f).click(), getYouTubeChannelDetails(f, b + f, c)))
        }, error: function (a) { alert(a) }, beforeSend: setHeader
    })
}, getUploadsPlaylistIdForTabs = function (a, b, c, d) {
    var e = c.data("youmax_global_options"); apiUrl = "https://www.googleapis.com/youtube/v3/channels?part=brandingSettings%2Csnippet%2Cstatistics%2CcontentDetails&id=" + a + "&key=" + e.apiKey; $.ajax({
        url: apiUrl, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (f) {
            playlistId =
            f.items[0].contentDetails.relatedPlaylists.uploads; c.find("#" + b + a).attr("id", b + playlistId); c.find('option[value="' + b + a + '"]').attr("value", b + playlistId); d && c.find("#" + b + f.items[0].contentDetails.relatedPlaylists.uploads).click(); getYouTubeChannelDetails(a, b + playlistId, c)
        }, error: function (a) { alert(a) }, beforeSend: setHeader
    })
}, getChannelIdForSearch = function (a, b) {
    $.ajax({
        url: a, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (a) {
            restrictedChannels = b.data("restrictToChannels"); restrictedChannels.push(a.items[0].id);
            b.data("restrictToChannels", restrictedChannels)
        }, error: function (a) { alert(a) }, beforeSend: setHeader
    })
}, getVideoStats = function (a, b, c) { var d = b.data("youmax_global_options").apiKey, e = ""; c && (e = "%2CliveStreamingDetails"); apiVideoStatURL = "https://www.googleapis.com/youtube/v3/videos?part=statistics%2CcontentDetails" + e + "&id=" + a + "&key=" + d; $.ajax({ url: apiVideoStatURL, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (a) { displayVideoStats(a, b, c) }, error: function (a) { alert(a) }, beforeSend: setHeader }) },
setHeader = function (a) { a && a.overrideMimeType && a.overrideMimeType("application/j-son;charset=UTF-8") }, convertViewCount = function (a) { a = parseInt(a, 10); 1E3 > a || (a = 1E6 > a ? Math.round(a / 1E3) + "K" : 1E9 > a ? (a / 1E6).toFixed(1) + "M" : (a / 1E9).toFixed(1) + "B"); return a }, convertViewCountForThumbnail = convertViewCount, convertLikeCommentCount = convertViewCount, convertHeaderCounts = convertViewCountWithComma, convertViewCountWithComma = function (a) {
    var b = ""; if (null == a || "0" == a) return ""; for (a = "" + a; 0 < a.length;) if (3 < a.length) b = "," + a.substring(a.length -
    3) + b, a = a.substring(0, a.length - 3); else { b = a + b; break } return b
}, convertVimeoDuration = function (a) { min = parseInt(a / 60, 10); sec = a - 60 * min; 10 > sec && (sec = "0" + sec); return 60 <= min ? (hours = parseInt(min / 60, 10), min -= 60 * hours, 10 > min && (min = "0" + min), hours + ":" + min + ":" + sec) : min + ":" + sec }, convertDuration = function (a) {
    var b; a = a.replace("PT", "").replace("S", "").replace("M", ":").replace("H", ":"); var c = a.split(":"); b = c[0]; for (var d = 1; d < c.length; d++) a = c[d], "" == a ? b += ":00" : (a = parseInt(a, 10), b = 10 > a ? b + (":0" + a) : b + (":" + a)); 1 == c.length &&
    (b = "0:" + b); return b
}, displayChannelHeader = function (a, b) {
    var c = b.data("youmax_global_options"), d = b.data("youmax_translator_text"), e = a.items[0]; channelId = e.id; channelTitle = e.snippet.title; channelImage = e.snippet.thumbnails["default"].url; channelSubscribers = convertHeaderCounts(e.statistics.subscriberCount); channelViews = convertHeaderCounts(e.statistics.viewCount); channelBackgroundImage = e.brandingSettings.image.bannerImageUrl; channelVideos = convertHeaderCounts(e.statistics.videoCount); channelDescription =
    e.snippet.description; userWebsite = c.userWebsite; b.find("#youmax-header").css("background-image", "url(" + channelBackgroundImage + ")"); b.find("#youmax-header-wrapper").append('<a href="https://www.youtube.com/channel/' + channelId + '" target="_blank"><div class="youmax-channel-icon"><img src="' + channelImage + '"/></div><div class="youmax-channel-data-holder"><div class="youmax-channel-title">' + channelTitle + '</div>  <div id="youmax-header-counts" class="youmax-generic-header-counts"><span class="youmax-header-posts" title="' +
    d.videos + '"><span class="youmax-count"><i class="fa fa-video-camera"></i>' + channelVideos + '</span> </span><span class="youmax-header-followers" title="' + d.subscribers + '"><span class="youmax-count"><i class="fa fa-envelope"></i>' + channelSubscribers + '</span></span><span class="youmax-header-following" title="' + d.views + '"><span class="youmax-count"><i class="fa fa-user"></i>' + channelViews + "</span></span></div>  </div></a>"); -1 != c.skin.indexOf("clean") ? (b.find("#youmax-header-wrapper").append('<div id="youmax-header-info"><div id="youmax-header-title">' +
    channelTitle + '</div><div class="youmax-subscribe-clean-wrapper"><div class="youmax-subscribe"><div class="g-ytsubscribe" data-channelid="' + channelId + '" data-layout="default" data-count="default"></div></div></div><div id="youmax-header-bio">' + channelDescription + '</div><div id="youmax-header-website"><a href="' + userWebsite + '" target="_blank">' + userWebsite + '</a></div><div id="youmax-header-counts"><span class="youmax-header-posts"><span class="youmax-count">' + channelVideos + "</span> " + d.videos + '</span><span class="youmax-header-followers"><span class="youmax-count">' +
    channelSubscribers + "</span> " + d.subscribers + '</span><span class="youmax-header-following"><span class="youmax-count">' + channelViews + "</span> " + d.views + "</span></div></div>"), b.find("#youmax-select-box").prepend('<div id="youmax-search-holder"><input id="youmax-search-box" type="text" placeholder="' + d.search + '"/><i class="fa fa-search youmax-search-icon"></i></div>'), b.find("#youmax-select-box").append('<i class="fa fa-caret-down"></i>')) : (b.find("#youmax-header-wrapper").append('<div id="youmax-stat-holder"><div id="youmax-search-holder-header"><input id="youmax-search-box-header" type="text" placeholder="' +
    d.search + '"/><i class="fa fa-search youmax-search-icon-header"></i></div></div>'), b.find("#youmax-header-wrapper").append('&nbsp;&nbsp;&nbsp;&nbsp;<div class="youmax-subscribe"><div class="g-ytsubscribe" data-channelid="' + channelId + '" data-layout="default" data-count="default"></div></div>'), b.find("#youmax-select-box").prepend('<div id="youmax-search-holder"><input id="youmax-search-box" type="text" placeholder="' + d.search + '"/><i class="fa fa-search youmax-search-icon"></i></div>'), b.find("#youmax-select-box").append('<i class="fa fa-caret-down"></i>'),
    b.find("#youmax-select-box").wrap('<div class="youmax-select-box-wrapper">')); c.alwaysUseDropdown && (b.find("#youmax-select-box").css("display", "block"), b.find("#youmax-tabs").hide(), b.find("#youmax-stat-holder").hide()); renderSubscribeButton()
}, displayVideoStats = function (a, b, c) {
    var d = b.data("youmax_global_options"), e = b.data("youmax_translator_text"); a = a.items; for (var f, g = 0; g < a.length; g++) {
        videoId = a[g].id; videoViewCount_raw = a[g].statistics.viewCount; videoDuration = a[g].contentDetails.duration; videoDuration =
        convertDuration(videoDuration); videoDefinition = a[g].contentDetails.definition.toUpperCase(); videoLikeCount_raw = a[g].statistics.likeCount; videoCommentCount_raw = a[g].statistics.commentCount; null == videoViewCount_raw ? (videoViewCount = "0", videoViewCount_raw = 0) : videoViewCount = convertViewCountForThumbnail(videoViewCount_raw); null != videoLikeCount_raw ? videoLikeCount = convertLikeCommentCount(videoLikeCount_raw) : (videoLikeCount = "0", videoLikeCount_raw = 0); null != videoCommentCount_raw ? videoCommentCount = convertLikeCommentCount(videoCommentCount_raw) :
        (videoCommentCount = "0", videoCommentCount_raw = 0); var k = "", h = "", l = "", m = ""; 0 < videoViewCount_raw && (h = '<span class="youmax-video-list-views" title="views"><span class="youmax-list-thumbnail-icon"><i class="fa fa-dot-circle-o"></i></span> <span class="youmax-all-skin-views">' + videoViewCount + '</span> <span class="youmax-views-text">' + e.views + "</span></span>", "" == k && (k = h)); 0 < videoLikeCount_raw && (l = '<span class="youmax-video-list-likes" title="likes"><span class="youmax-list-thumbnail-icon"><i class="fa fa-heart"></i></span> <span class="youmax-all-skin-likes">' +
        videoLikeCount + '</span> <span class="youmax-views-text">' + e.likes + "</span></span>", "" == k && (k = l)); 0 < videoCommentCount_raw && (m = '<span class="youmax-video-list-comments" title="comments"><span class="youmax-list-thumbnail-icon"><i class="fa fa-comment"></i></span> <span class="youmax-all-skin-comments">' + videoCommentCount + '</span> <span class="youmax-views-text">' + e.comments + "</span></span>", "" == k && (k = m)); f = b.find("#youmax-video-list-div #youtube_" + videoId); f.data("views", videoViewCount); f.data("likes",
        videoLikeCount); -1 != d.skin.indexOf("clean") ? (c && (actualEndTime = a[g].liveStreamingDetails.actualEndTime, actualStartTime = a[g].liveStreamingDetails.actualStartTime, scheduledStartTime = a[g].liveStreamingDetails.scheduledStartTime, null != actualEndTime ? f.append('<div class="youmax-event-tag">Completed Event</div>') : null != actualStartTime ? (watching = convertViewCountWithComma(a[g].liveStreamingDetails.concurrentViewers), f.append('<div class="youmax-event-tag youmax-event-live"><div class="youmax-live-icon"><i class="fa fa-circle"></i></div>Live Event</div>')) :
        null != scheduledStartTime && (scheduledAt = convertDateFormat(scheduledStartTime), f.append('<div class="youmax-event-tag youmax-event-upcoming">Upcoming Event</div>'))), f.find(".youmax-all-skin-views").empty().append(videoViewCount), f.find(".youmax-all-skin-likes").empty().append(videoLikeCount), f.find(".youmax-all-skin-comments").empty().append(videoCommentCount), f.find(".youmax-clean-time").empty().append(videoDuration)) : (c ? (actualEndTime = a[g].liveStreamingDetails.actualEndTime, actualStartTime = a[g].liveStreamingDetails.actualStartTime,
        scheduledStartTime = a[g].liveStreamingDetails.scheduledStartTime, null != actualEndTime ? (f.append('<div class="youmax-definition youmax-event-tag">Completed Event</div>'), f.append('<div class="youmax-duration">' + videoDuration + "</div>")) : null != actualStartTime ? (watching = convertViewCountWithComma(a[g].liveStreamingDetails.concurrentViewers), f.append('<div class="youmax-definition youmax-event-tag youmax-event-live"><div class="youmax-live-icon"><i class="fa fa-circle"></i></div>Live Event</div>'), f.append('<div class="youmax-duration">' +
        watching + " watching</div>")) : null != scheduledStartTime && (scheduledAt = convertDateFormat(scheduledStartTime), f.append('<div class="youmax-definition youmax-event-tag youmax-event-upcoming">Upcoming Event</div>'), f.append('<div class="youmax-duration">' + scheduledAt + "</div>"))) : (f.find(".youmax-duration").empty().append(videoDuration), f.find(".youmax-definition").empty().append(videoDefinition)), -1 != d.skin.indexOf("list") ? (f.find(".youmax-view-date-holder").prepend(h), f.find(".youmax-view-date-holder").append(l),
        f.find(".youmax-view-date-holder").append(m)) : -1 != d.skin.indexOf("trend") ? (video_uploaded = f.data("videouploaded"), trend = getVideoTrend(videoViewCount_raw, videoLikeCount_raw, videoCommentCount_raw, video_uploaded, d.hotThreshold, d.trendingThreshold), icon = "trending" == trend ? "fa-bolt" : "hot" == trend ? "fa-fire" : "fa-check", f.find(".youmax-trend-holder").attr("class", "youmax-trend-holder").empty().addClass("youmax-" + trend).append('<i class="fa ' + icon + '"></i> <span class="youmax-trend-text">' + trend + "</span>"), f.find(".youmax-view-date-holder").prepend(h),
        f.find(".youmax-view-date-holder").append(l), f.find(".youmax-view-date-holder").append(m)) : (f.find(".youmax-view-date-holder").prepend(k), -1 != d.skin.indexOf("block") && (f.find(".youmax-all-skin-likes").empty().append(videoLikeCount), f.find(".youmax-all-skin-comments").empty().append(videoCommentCount))))
    }
}, getVideoTrend = function (a, b, c, d, e, f) {
    a = null != a && "" != a ? parseInt(a, 10) : 0; b = null != b && "" != b ? parseInt(b, 10) : 0; c = null != c && "" != c ? parseInt(c, 10) : 0; dateDiffMS = Math.abs(new Date - new Date(d)); dateDiffDY = dateDiffMS /
    1E3 / 60 / 60 / 24; a = (a + 100 * b + 300 * c) / dateDiffDY; return a >= e ? "hot" : a >= f ? "trending" : "classic"
}, insertVideoComments = function (a, b, c) {
    var d = c.data("youmax_global_options"), e = c.data("youmax_translator_text"); $youmaxPlayBox = "popup" == d.displayVideo ? $(".youmax-popup.mfp-gallery") : c; c = $youmaxPlayBox.find("#youmax-encloser-comments"); b || c.empty(); b = a.items; a = a.nextPageToken; var f = $youmaxPlayBox.find(".youmax-encloser-comment-button.youmax-more-button"); null != a && "undefined" != a && "" != a ? f.data("nextpagetoken", a) : f.data("nextpagetoken",
    ""); if (null == b || 0 == b.length) c.append('<div id="" class="youmax-video-comment"><div class="youmax-comment" ><span class="youmax-comment-content" style="text-align:center;">' + e.nocommentsfound + "</span><div></div>"), f.data("nextpagetoken", ""); else for (a = 0; a < b.length; a++) comment = b[a].snippet.topLevelComment.snippet.textDisplay, null != comment && "" != comment && (commentPublished = b[a].snippet.topLevelComment.snippet.publishedAt, authorName = b[a].snippet.topLevelComment.snippet.authorDisplayName, authorImage = b[a].snippet.topLevelComment.snippet.authorProfileImageUrl,
    c.append('<div  class="youmax-video-comment"><div class="youmax-from"><div class="youmax-from-img" style="background-image:url(\'' + authorImage + '\');"></div><div class="youmax-from-name">' + authorName + '</div><div class="youmax-published">' + getDateDiff(commentPublished, e) + ' </div></div><div class="youmax-comment"><span class="youmax-comment-content">' + comment + "</span><div></div>")); resetLoadMoreComments($youmaxPlayBox, d, e)
}, insertVimeoVideoComments = function (a, b, c) {
    var d = c.data("youmax_global_options"),
    e = c.data("youmax_translator_text"); $youmaxPlayBox = "popup" == d.displayVideo ? $(".youmax-popup.mfp-gallery") : c; c = $youmaxPlayBox.find("#youmax-encloser-comments"); b || c.empty(); b = a.data; a = a.paging.next; var f = $youmaxPlayBox.find(".youmax-encloser-comment-button.youmax-more-button"); null != a && "undefined" != a && "" != a ? (a = a.substring(a.lastIndexOf("&") + 1), f.data("nextpagetoken", a)) : f.data("nextpagetoken", ""); if (null == b || 0 == b.length) c.append('<div id="" class="youmax-video-comment"><div class="youmax-comment" ><span class="youmax-comment-content" style="text-align:center;">' +
    e.nocommentsfound + "</span><div></div>"), f.data("nextpagetoken", ""); else for (a = 0; a < b.length; a++) comment = b[a].text, null != comment && "" != comment && (commentPublished = b[a].created_on, authorName = b[a].user.name, authorImage = null != b[a].user.pictures ? b[a].user.pictures.sizes[1].link : "http://i1.wp.com/i.vimeocdn.com/portrait/default-green_75x75.png", c.append('<div  class="youmax-video-comment"><div class="youmax-from"><div class="youmax-from-img" style="background-image:url(\'' + authorImage + '\');"></div><div class="youmax-from-name">' +
    authorName + '</div><div class="youmax-published">' + getDateDiff(commentPublished, e) + ' </div></div><div class="youmax-comment"><span class="youmax-comment-content">' + comment + "</span><div></div>")); resetLoadMoreComments($youmaxPlayBox, d, e)
}, processDescription = function (a) {
    a = a.replace(/"/g, "'"); spotArray = a.match(/(http(s)*:\/\/|www\.).+?(\s|\n|$)/g); if (null != spotArray) for (var b = 0; b < spotArray.length; b++) spotArray[b] = spotArray[b].trim(), replaceLink = 0 == spotArray[b].indexOf("www.") ? "http://" + spotArray[b] : spotArray[b],
    a = a.replace(spotArray[b], "<a target='_blank' href='" + replaceLink + "' class='famax-link'>" + spotArray[b] + "</a>"); return a
}, insertYouTubeVideos = function (a, b, c, d, e) {
    var f = [], g = b.find("ul"), k = ""; d || 0 != b.find(".youmax-tab-hover").length || (currentUserData = b.data("youmax_current_user_data"), b.find("#youmax-showing-title").append('<div id="' + b.data("youmax_current_playlist_id") + '" class="youmax-tab youmax-tab-hover youmax-showing-search-title" data-username="' + currentUserData.username + '" data-userimage="' +
    currentUserData.userimage + '" data-userlink="' + currentUserData.userlink + '"><i title="Back to Playlists" id="youmax-back-to-playlists" class="fa fa-chevron-circle-left fa-lg"></i> <i class="fa fa-bars fa-lg youmax-showing-playlist-icon"></i>' + b.data("youmax_current_playlist_name") + "</div>").show()); a = a.items; for (var h = b.data("youmax_global_options"), l = b.data("youmax_translator_text"), m = 0; m < a.length; m++) videoId = a[m].snippet.resourceId.videoId, videoTitle = a[m].snippet.title, videoDescription = a[m].snippet.description,
    videoDescription = processDescription(videoDescription), 0 < g.find("#youtube_" + videoId).length || (channelId = a[m].snippet.channelId, null != a[m].snippet.thumbnails ? (videoThumbnail = a[m].snippet.thumbnails.medium.url, videoUploaded = a[m].snippet.publishedAt, f.push(videoId), videoLink = "https://www.youtube.com/watch?v=" + videoId, k += createItem("youtube", videoId, videoTitle, videoDescription, null, null, null, videoUploaded, videoLink, videoThumbnail, null, null, channelId, h, l)) : videoThumbnail = ""); $items = $(k); 0 == g.children(".youmax-grid-item").length &&
    (e = d = !1, c = !0); g.append($items); createGrid(b, "video", c, d, e, $items); getVideoStats(f, b)
}, insertVimeoVideos = function (a, b, c, d, e) {
    var f = "", g = b.find("ul"); a = a.data; for (var k = b.data("youmax_global_options"), h = b.data("youmax_translator_text"), l = 0; l < a.length; l++) videoId = a[l].uri.substring(a[l].uri.lastIndexOf("/") + 1), videoLink = "https://vimeo.com/" + videoId, videoTitle = a[l].name, videoDescription = a[l].description, videoDescription = null == videoDescription ? "" : processDescription(videoDescription), null != a[l].pictures.sizes ?
    (videoThumbnail = a[l].pictures.sizes[2].link, videoUploaded = a[l].created_time, videoViewCount_raw = a[l].stats.plays, videoDuration = a[l].duration, videoLikeCount_raw = a[l].metadata.connections.likes.total, videoCommentCount_raw = a[l].metadata.connections.comments.total, f += createItem("vimeo", videoId, videoTitle, videoDescription, videoViewCount_raw, videoLikeCount_raw, videoCommentCount_raw, videoUploaded, videoLink, videoThumbnail, videoDuration, null, null, k, h)) : videoThumbnail = ""; $items = $(f); 0 == g.children(".youmax-grid-item").length &&
    (e = d = !1, c = !0); g.append($items); createGrid(b, "video", c, d, e, $items)
}, updateCache = function (a, b, c, d, e, f, g) {
    var k, h, l = c.data("youmax_global_options"); "loadmore" == l.loadMode ? ($youmaxLoadMoreDiv = c.find("#youmax-load-more-div"), k = "more") : -1 != l.loadMode.indexOf("paginate") && ($youmaxLoadMoreDiv = c.find("#youmax-next-div"), k = "next"); "youtube" == a ? (h = b.items, a = b.nextPageToken, null != a && "undefined" != a && "" != a ? $youmaxLoadMoreDiv.data("nextpagetoken", a) : $youmaxLoadMoreDiv.data("nextpagetoken", "")) : "vimeo" == a && (a = b.paging.next,
    h = b.data, null != a && "undefined" != a && "" != a ? (a = a.substring(a.lastIndexOf("&") + 1), $youmaxLoadMoreDiv.data("nextpagetoken", a)) : $youmaxLoadMoreDiv.data("nextpagetoken", "")); null != h && 0 < h.length && (cache = c.data("cache"), cache = cache.concat(h), c.data("cache", cache)); handlePagination(c, k, d, e, f, g)
}, createItem = function (a, b, c, d, e, f, g, k, h, l, m, p, u, q, r) {
    var n = ""; null == e ? (videoViewCount = "0", e = 0) : videoViewCount = convertViewCountForThumbnail(e); null != f ? videoLikeCount = convertLikeCommentCount(f) : (videoLikeCount = "0", f = 0);
    null != g ? videoCommentCount = convertLikeCommentCount(g) : (videoCommentCount = "0", g = 0); null != m ? "vimeo" == a && (m = convertVimeoDuration(m)) : m = "??"; null == u && (u = ""); var t = "", v = "", w = "", x = ""; 0 < e && (v = '<span class="youmax-video-list-views" title="views"><span class="youmax-list-thumbnail-icon"><i class="fa fa-dot-circle-o"></i></span> <span class="youmax-all-skin-views">' + videoViewCount + '</span> <span class="youmax-views-text">' + r.views + "</span></span>", "" == t && (t = v)); 0 < f && (w = '<span class="youmax-video-list-likes" title="likes"><span class="youmax-list-thumbnail-icon"><i class="fa fa-heart"></i></span> <span class="youmax-all-skin-likes">' +
    videoLikeCount + '</span> <span class="youmax-views-text">' + r.likes + "</span></span>", "" == t && (t = w)); 0 < g && (x = '<span class="youmax-video-list-comments" title="comments"><span class="youmax-list-thumbnail-icon"><i class="fa fa-comment"></i></span> <span class="youmax-all-skin-comments">' + videoCommentCount + '</span> <span class="youmax-views-text">' + r.comments + "</span></span>", "" == t && (t = x)); "thumbnail" == q.displayVideo ? (frame_source = generateFrameSource(b, a, !1, q), videoThumbnailString = '<div class="fluid-width-video-wrapper" style="padding-top:' +
    100 * q.aspectRatio + '%;"><iframe id="youmax-encloser-video" style="width:100%;" src="' + frame_source + '" frameborder="0" allowfullscreen></iframe></div>') : videoThumbnailString = "link" == q.displayVideo ? '<a href="' + h + '" target="_blank"><img class="youmax-main-thumbnail" href="' + h + '" src="' + l + '"></a>' : '<img class="youmax-main-thumbnail" href="' + h + '" src="' + l + '">'; n = '<li id="' + a + "_" + b + '" data-description="' + d + '" data-views="' + videoViewCount + '" data-likes="' + videoLikeCount + '" data-comments="' + videoCommentCount +
    '" data-link="' + h + '" data-videouploaded="' + k + '" data-channelid="' + u + '" class="youmax-grid-item youmax-hidden" ><div class="youmax-thumbnail-image-wrapper">' + videoThumbnailString + '<div class="youmax-play-overlay"><div class="youmax-play-icon-holder"><i class="fa fa-play"></i></div></div></div><p><span class="youmax-title-desc-holder"><span class="youmax-video-list-title">' + c + '</span><span class="youmax-video-list-description">' + d + "</span></span>"; -1 != q.skin.indexOf("list") ? n += '<span class="youmax-view-date-holder">' +
    v + ' <span class="youmax-views-date-separator">|</span><span class="youmax-video-list-date">' + getDateDiff(k, r) + "</span> " + w + x + "</span></p>" : -1 != q.skin.indexOf("trend") ? (trend = getVideoTrend(e, f, g, k, q.hotThreshold, q.trendingThreshold), icon = "trending" == trend ? "fa-bolt" : "hot" == trend ? "fa-fire" : "fa-check", n += '<span class="youmax-trend-link-holder"><span class="youmax-trend-holder youmax-' + trend + '"><i class="fa ' + icon + '"></i> <span class="youmax-trend-text">' + trend + '</span></span>   <a class="youmax-thumbnail-link" href="' +
    h + '" target="_blank"><span class="youmax-link"><i class="fa fa-link"></i></span></a></span>', n += '<span class="youmax-view-date-holder">' + v + ' <span class="youmax-views-date-separator">|</span><span class="youmax-video-list-date">' + getDateDiff(k, r) + "</span> " + w + x + "</span></p>") : n += '<span class="youmax-view-date-holder">' + t + '<span class="youmax-views-date-separator">|</span><span class="youmax-video-list-date">' + getDateDiff(k, r) + "</span></span></p>"; -1 != q.skin.indexOf("clean") ? ("vimeo" == a && q.showVimeoLikesInsteadOfViews ?
    (n += '<div class="youmax-definition"><i class="fa fa-heart fa-1x"></i> <span class="youmax-all-skin-likes">' + videoLikeCount + "</span> </div>", n += '<div class="youmax-duration"><i class="fa fa-comment fa-1x"></i> <span class="youmax-all-skin-comments">' + videoCommentCount + "</span> </div>") : (n += '<div class="youmax-duration"><i class="fa fa-heart fa-1x"></i> <span class="youmax-all-skin-likes">' + videoLikeCount + "</span> </div>", n += '<div class="youmax-definition"><i class="fa fa-volume-off fa-1x"></i> <span class="youmax-all-skin-views">' +
    videoViewCount + "</span> </div>"), n += '<div class="youmax-clean-overlay-holder"><span class="youmax-clean-title">' + c + '</span><span class="youmax-clean-time">' + m + "</span></span></div>") : ("thumbnail" != q.displayVideo && (n += '<div class="youmax-duration">' + m + "</div>", "youtube" == a && (n += '<div class="youmax-definition">' + p + "</div>")), -1 != q.skin.indexOf("block") && (n += '<div class="youmax-like-comment-holder"><div class="youmax-like-box"><i class="fa fa-heart"></i> <span class="youmax-all-skin-likes">' + videoLikeCount +
    '</span></div><div class="youmax-comment-box"><i class="fa fa-comment"></i><span class="youmax-all-skin-comments">' + videoCommentCount + "</span></div></div>")); return n + "</li>"
}, insertYouTubeChannelPlaylists = function (a, b, c, d, e) {
    var f = "", g = b.find("ul"); a = a.items; b.data("youmax_global_options"); for (var k = b.data("youmax_translator_text"), h = 0; h < a.length; h++) playlistId = a[h].id, videoCount = a[h].contentDetails.itemCount, playlistTitle = a[h].snippet.title, null != a[h].snippet.thumbnails ? (playlistThumbnail = a[h].snippet.thumbnails.medium.url,
    playlistUploaded = a[h].snippet.publishedAt, f += '<li id="youtube_playlist_videos_' + playlistId + '" class="youmax-playlist-thumbnail youmax-grid-item youmax-hidden" ><div class="youmax-thumbnail-image-wrapper" ><img class="youmax-main-thumbnail" href="https://www.youtube.com/watch?v=' + playlistId + '" src="' + playlistThumbnail + '"></div><div class="youmax-playlist-video-count-wrapper"><div class="youmax-playlist-video-count-box"><span class="youmax-playlist-video-count">' + videoCount + '</span><br>VIDEOS<br><div class="youmax-playlist-line-wrapper"><span class="youmax-playlist-line"></span><br><span class="youmax-playlist-line"></span><br><span class="youmax-playlist-line"></span></div></div></div><p><span class="youmax-video-list-title">' +
    playlistTitle + '</span><span class="youmax-video-list-views youmax-video-list-date-playlist">' + getDateDiff(playlistUploaded, k) + ' </span></p><div class="youmax-clean-playlist-title">' + playlistTitle + "</div></li>") : playlistThumbnail = ""; $items = $(f); 0 == g.children(".youmax-grid-item").length && (e = d = !1, c = !0); g.append($items); createGrid(b, "playlist", c, d, e, $items)
}, insertUserSearchVideos = function (a, b, c, d, e, f) {
    searchQuery = f.substring(6).replace(/_/g, " "); d || (0 == b.find(".youmax-tab-hover").length && b.find("#youmax-showing-title").append('<div id="' +
    f + '" class="youmax-tab youmax-tab-hover youmax-showing-search-title"><i class="fa fa-search fa-1x youmax-showing-search-icon"></i>' + searchQuery + "</div>").show(), null != a.items && 0 != a.items.length || b.find("ul").empty().append('<div class="youmax-not-found"><span style="opacity:0;">.</span><br><br><br><br><br><br>No videos found..<br><br><br><br><br><br><span style="opacity:0;">.</span></div>')); insertYouTubeSearchVideos(a, b, null, c, d, e)
}, insertYouTubeSearchVideos = function (a, b, c, d, e, f) {
    var g = [], k = "", h =
    b.find("ul"), l = b.data("youmax_global_options"), m = b.data("youmax_translator_text"); a = a.items; if (null != a && 0 != a.length) {
        b.find(".youmax-not-found").remove(); isEvent = a[0].isEvent; for (var p = 0; p < a.length; p++) videoId = c ? a[p].id : a[p].id.videoId, 0 < h.find("#youtube_" + videoId).length || (videoTitle = a[p].snippet.title, null != a[p].snippet.thumbnails ? (videoThumbnail = a[p].snippet.thumbnails.medium.url, isEvent && (eventType = a[p].snippet.liveBroadcastContent, "upcoming" == eventType ? videoThumbnail = videoThumbnail.replace(".jpg",
        "_live.jpg") : "live" == eventType && (videoThumbnail = videoThumbnail.replace(".jpg", "_live.jpg"))), videoUploaded = a[p].snippet.publishedAt, videoDescription = a[p].snippet.description, videoDescription = processDescription(videoDescription), channelId = a[p].snippet.channelId, g.push(videoId), videoLink = "https://www.youtube.com/watch?v=" + videoId, k += createItem("youtube", videoId, videoTitle, videoDescription, null, null, null, videoUploaded, videoLink, videoThumbnail, null, null, channelId, l, m)) : videoThumbnail = ""); $items = $(k);
        0 == h.children(".youmax-grid-item").length && (f = e = !1, d = !0); h.append($items); createGrid(b, "video", d, e, f, $items); getVideoStats(g, b, isEvent)
    }
}, convertDateFormat = function (a) { a = new Date(a); month = "Jan Feb  Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "); minutes = 10 > a.getMinutes() ? "0" + a.getMinutes() : a.getMinutes(); return a.getDate() + " " + month[a.getMonth() + 1] + " " + a.getHours() + ":" + minutes + " GMT" }, getDateDiff = function (a, b) {
    if (null == a || "" == a || "undefined" == a) return "?"; dateDiffMS = Math.abs(new Date - new Date(a));
    dateDiffHR = dateDiffMS / 1E3 / 60 / 60; if (24 < dateDiffHR) {
        dateDiffDY = dateDiffHR / 24; if (30 < dateDiffDY) { dateDiffMH = dateDiffDY / 30; if (12 < dateDiffMH) return dateDiffYR = dateDiffMH / 12, dateDiffYR = Math.round(dateDiffYR), 1 >= dateDiffYR ? dateDiffYR + " " + b.year + " " + b.ago : dateDiffYR + " " + b.years + " " + b.ago; dateDiffMH = Math.round(dateDiffMH); return 1 >= dateDiffMH ? dateDiffMH + " " + b.month + " " + b.ago : dateDiffMH + " " + b.months + " " + b.ago } dateDiffDY = Math.round(dateDiffDY); return 1 >= dateDiffDY ? dateDiffDY + " " + b.day + " " + b.ago : dateDiffDY + " " +
        b.days + " " + b.ago
    } dateDiffHR = Math.round(dateDiffHR); return 1 > dateDiffHR ? b.now : 1 == dateDiffHR ? dateDiffHR + " " + b.hour + " " + b.ago : dateDiffHR + " " + b.hours + " " + b.ago
}, createGrid = function (a, b, c, d, e, f) {
    var g = a.data("youmax_global_options"), k = a.find("ul"); $("#youmax").imagesLoaded().always(function () {
        a.find(".youmax-loading-div").remove(); k.find("li.youmax-hidden").removeClass("youmax-hidden"); d ? k.masonry("appended", f) : e ? ($oldItems = k.find(".youmax-dying"), k.masonry("remove", $oldItems).masonry("layout"), k.masonry("appended",
        f).masonry("layout")) : c && (null != k.data("masonry") && k.masonry("destroy"), $youmaxGrid = k.masonry({ columnWidth: ".youmax-grid-item", percentPosition: !0, transitionDuration: g.gridTransitionSpeed }), g.relayoutOnCreate && setTimeout(function () { a.find("ul").masonry("layout") }, g.updateLayoutDelay)); "playlist" == b ? "playall" == g.playlistAction ? registerPopup(a, !0) : a.find("#youmax-video-list-div .youmax-main-thumbnail").click(function () {
            $currentTab = a.find(".youmax-tab-hover"); a.data("youmax_current_user_data", $currentTab.data());
            $youmaxPlaylistThumbnail = $(this).parents("li").first(); youmaxPlaylistId = $youmaxPlaylistThumbnail.attr("id"); displayItems(youmaxPlaylistId, a); youmax_current_playlist_name = $youmaxPlaylistThumbnail.find(".youmax-video-list-title").text(); a.data("youmax_current_playlist_name", youmax_current_playlist_name); a.data("youmax_current_playlist_id", youmaxPlaylistId)
        }) : registerPopup(a); resetLoadMoreButton(a); -1 != g.skin.indexOf("trend") && 280 > a.find("#tiles li:first-child").width() && a.find(".youmax-video-list-date").hide()
    })
},
resetLoadMoreButton = function (a) {
    var b, c = a.data("youmax_global_options"), d = a.data("youmax_translator_text"); c.showTextInsteadOfIcons ? "loadmore" == c.loadMode ? (b = a.find("#youmax-load-more-div"), b.html(d.loadmore)) : -1 != c.loadMode.indexOf("paginate") && (b = a.find("#youmax-next-div"), b.html(d.next), a.find("#youmax-previous-div").html(d.previous)) : "loadmore" == c.loadMode ? (b = a.find("#youmax-load-more-div"), b.html('<i class="fa fa-plus fa-5x"></i>')) : -1 != c.loadMode.indexOf("paginate") && (b = a.find("#youmax-next-div"),
    b.html('<i class="fa fa-caret-right fa-5x"></i>'), a.find("#youmax-previous-div").html('<i class="fa fa-caret-left fa-5x"></i>')); b.removeClass("youmax-load-more-div-click"); a.find("#youmax-previous-div").removeClass("youmax-load-more-div-click")
}, resetLoadMoreComments = function (a, b, c) { a = a.find(".youmax-encloser-comment-button.youmax-more-button"); a.removeClass("youmax-load-more-comments-clicked"); b.showTextInsteadOfIcons ? a.html(c.loadmorecomments) : a.html('<i class="fa fa-plus fa-3x"></i>') }, registerPopup =
function (a, b) {
    var c = a.data("youmax_global_options"), d = a.data("youmax_translator_text"), e = "", f = ""; if ("popup" == c.displayVideo) e = b ? c.videoProtocol + "//www.youtube.com/embed?listType=playlist&list=%id%&rel=0" : c.videoProtocol + "//www.youtube.com/embed/%id%?rel=0", c.autoPlayVideo && (e += "&autoplay=1"), e = c.showTitleInVideoPlayer ? e + "&showinfo=1" : e + "&showinfo=0", e += "&theme=" + c.videoPlayerTheme, f = c.videoProtocol + "//player.vimeo.com/video/%id%", c.autoPlayVideo && (f += "?autoplay=1"), c.showTextInsteadOfIcons ? (youmaxExtraPopupClasses =
    "youmax-text-instead-of-icons", youmaxShowCommentsText = d.showcomments, youmaxMoreCommentsText = d.loadmorecomments) : (youmaxExtraPopupClasses = "", youmaxShowCommentsText = '<i class="fa fa-comments fa-3x"></i>', youmaxMoreCommentsText = '<i class="fa fa-plus fa-3x"></i>'), a.find("#youmax-video-list-div .youmax-main-thumbnail").magnificPopup({
        type: "iframe", gallery: { enabled: !0 }, iframe: {
            markup: '<div class="mfp-iframe-scaler"><div class="mfp-close"></div><iframe class="mfp-iframe" frameborder="0" allowfullscreen></iframe><div id="photo-detail-holder"><div class="photo-popup-title-bar"><div class="photo-popup-title"></div> <div class="youmax-user-stamp"><a href="" target="_blank" class="youmax-user-link"><div class="youmax-user-image"><img src=""></div> <div class="youmax-user-name"></div></a></div> </div><div class="photo-popup-description photo-popup-description-limited"></div><div class="youmax-full-description-button-wrapper"><div class="youmax-full-description-button">More..</div></div><div class="photo-popup-stats"><div class="media-popup-stat-1"></div><div class="media-popup-stat-2"> </div><div class="media-uploaded"></div></div><div class="youmax-share-link-holder"><div type="button" class="youmax-share-video-button"><i class="fa fa-share-alt fa-2x"></i></div><div class="youmax-encloser-comment-button youmax-show-button youmax-popup-show-button">' +
            youmaxShowCommentsText + '</div><a href="" target="_blank" class="youmax-view-on-link"><div class="youmax-view-on">View on </div></a></div><div id="youmax-encloser-comment-holder" class="youmax-encloser-comment-holder-popup"><div class="youmax-video-comment youmax-commentbox-holder"><textarea class="youmax-comment-textbox" placeholder="' + d.thoughts + '"></textarea><button type="button" class="youmax-add-comment-button"><i class="fa fa-google-plus fa-2x"></i><span class="youmax-google-login-text">Login</span></button></div><div id="youmax-encloser-comments"></div><div class="youmax-encloser-comment-button youmax-more-button">' +
            youmaxMoreCommentsText + "</div></div> </div></div>", patterns: { youtube: { src: e }, vimeo: { src: f } }
        }, preloader: !1, showCloseBtn: !0, closeBtnInside: !0, closeOnContentClick: !1, closeOnBgClick: !0, enableEscapeKey: !0, modal: !1, alignTop: c.alignPopupToTop, removalDelay: 100, mainClass: "youmax-popup " + youmaxExtraPopupClasses, callbacks: { change: function (b, c, d) { b = $(this.currItem.el.context).parents("li").first(); displayVideoData(b, a) } }
    }); else if ("inline" == c.displayVideo || "newpage" == c.displayVideo) a.find("#youmax-video-list-div .youmax-main-thumbnail").click(function () {
        $baseElement =
        $(this).parents("li").first(); displayInlineVideo($baseElement, !0, !0, a, b)
    }), "inline" == c.displayVideo && c.displayFirstVideoOnLoad && (setTimeout(function () { $baseElement = a.find("#youmax-video-list-div li:first"); displayInlineVideo($baseElement, !1, !0, a, b) }, 100), c.displayFirstVideoOnLoad = !1, a.data("youmax_global_options", c)), "inline" == c.displayVideo && "" != c.featuredVideo && (-1 != c.featuredVideo.indexOf("youtube.com") ? (video_type = "youtube", video_id = c.featuredVideo.substring(c.featuredVideo.lastIndexOf("?v=") +
    3)) : -1 != c.featuredVideo.indexOf("vimeo.com") && (video_type = "vimeo", video_id = c.featuredVideo.substring(c.featuredVideo.lastIndexOf("/") + 1)), "youtube" == video_type ? getYoutubeVideoDetails(video_id, a, !1, !1) : "vimeo" == video_type && getVimeoVideoDetails(video_id, a, !1, !1), c.featuredVideo = "", a.data("youmax_global_options", c))
}, displayVideoData = function (a, b) {
    var c = b.data("youmax_global_options"), d = b.data("youmax_translator_text"), e = b.find(".youmax-tab-hover").attr("id"); video_likes = a.data("likes"); video_comments =
    a.data("comments"); video_views = a.data("views"); video_description = a.data("description"); video_uploaded = a.find(".youmax-video-list-date").text(); video_id_with_type = a.attr("id"); video_type = video_id_with_type.substring(0, video_id_with_type.indexOf("_")); video_id = video_id_with_type.substring(video_id_with_type.indexOf("_") + 1); video_title = a.find(".youmax-video-list-title").text(); channel_id = a.data("channelid"); videoLink = a.data("link"); $tab = b.find(".youmax-tab-hover"); userImage = $tab.data("userimage"); userName =
    $tab.data("username"); userLink = $tab.data("userlink"); setTimeout(function () {
        $youmaxPlayBox = "popup" == c.displayVideo ? $(".youmax-popup.mfp-gallery") : b; null != video_title && $youmaxPlayBox.find(".photo-popup-title").html(video_title); null != video_description && (video_description = video_description.replace(/\n/g, "<br>"), $youmaxPlayBox.find(".photo-popup-description").html(video_description)); null != userImage && $youmaxPlayBox.find(".youmax-user-image>img").attr("src", userImage); null != userName && $youmaxPlayBox.find(".youmax-user-name").html(userName);
        null != userLink && $youmaxPlayBox.find(".youmax-user-link").attr("href", userLink); null != video_views && 0 != video_views && "??" != video_views && null != video_likes && 0 != video_likes && "??" != video_likes && null != video_comments && 0 != video_comments && "??" != video_comments ? ($youmaxPlayBox.find(".media-popup-stat-1").html('<i class="fa fa-dot-circle-o"></i>' + video_views + " <span class='popup-stat-text'>" + d.views + "</span>").css("width", "30%").show().attr("title", video_views + " " + d.views), $youmaxPlayBox.find(".media-popup-stat-2").html('<i class="fa fa-heart"></i>' +
        video_likes + " <span class='popup-stat-text'>" + d.likes + "</span>").css("width", "30%").show().attr("title", video_likes + " " + d.likes), $youmaxPlayBox.find(".media-uploaded").css("width", "40%")) : null != video_views && 0 != video_views && "??" != video_views && null != video_likes && 0 != video_likes && "??" != video_likes ? ($youmaxPlayBox.find(".media-popup-stat-1").html('<i class="fa fa-dot-circle-o"></i>' + video_views + " <span class='popup-stat-text'>" + d.views + "</span>").css("width", "30%").show().attr("title", video_views + " " +
        d.views), $youmaxPlayBox.find(".media-popup-stat-2").html('<i class="fa fa-heart"></i>' + video_likes + " <span class='popup-stat-text'>" + d.likes + "</span>").css("width", "30%").show().attr("title", video_likes + " " + d.likes), $youmaxPlayBox.find(".media-uploaded").css("width", "40%")) : null != video_views && 0 != video_views && "??" != video_views && null != video_comments && 0 != video_comments && "??" != video_comments ? ($youmaxPlayBox.find(".media-popup-stat-1").html('<i class="fa fa-dot-circle-o"></i>' + video_views + " <span class='popup-stat-text'>" +
        d.views + "</span>").css("width", "30%").show().attr("title", video_views + " " + d.views), $youmaxPlayBox.find(".media-popup-stat-2").html('<i class="fa fa-comment"></i>' + video_comments + " <span class='popup-stat-text'>" + d.comments + "</span>").css("width", "30%").show().attr("title", video_comments + " " + d.comments), $youmaxPlayBox.find(".media-uploaded").css("width", "40%")) : null != video_likes && 0 != video_likes && "??" != video_likes && null != video_comments && 0 != video_comments && "??" != video_comments ? ($youmaxPlayBox.find(".media-popup-stat-1").html('<i class="fa fa-heart"></i>' +
        video_likes + " <span class='popup-stat-text'>" + d.likes + "</span>").css("width", "30%").show().attr("title", video_likes + " " + d.likes), $youmaxPlayBox.find(".media-popup-stat-2").html('<i class="fa fa-comment"></i>' + video_comments + " <span class='popup-stat-text'>" + d.comments + "</span>").css("width", "30%").show().attr("title", video_comments + " " + d.comments), $youmaxPlayBox.find(".media-uploaded").css("width", "40%")) : null != video_views && 0 != video_views && "??" != video_views ? ($youmaxPlayBox.find(".media-popup-stat-1").html('<i class="fa fa-dot-circle-o"></i>' +
        video_views + " <span class='popup-stat-text'>" + d.views + "</span>").css("width", "50%").show().attr("title", video_views + " " + d.views), $youmaxPlayBox.find(".media-popup-stat-2").hide(), $youmaxPlayBox.find(".media-uploaded").css("width", "50%")) : null != video_likes && 0 != video_likes && "??" != video_likes ? ($youmaxPlayBox.find(".media-popup-stat-1").html('<i class="fa fa-heart"></i>' + video_likes + " <span class='popup-stat-text'>" + d.likes + "</span>").css("width", "50%").show().attr("title", video_likes + " " + d.likes), $youmaxPlayBox.find(".media-popup-stat-2").hide(),
        $youmaxPlayBox.find(".media-uploaded").css("width", "50%")) : null != video_comments && 0 != video_comments && "??" != video_comments ? ($youmaxPlayBox.find(".media-popup-stat-1").html('<i class="fa fa-comment"></i>' + video_comments + " <span class='popup-stat-text'>" + d.comments + "</span>").css("width", "50%").show().attr("title", video_comments + " " + d.comments), $youmaxPlayBox.find(".media-popup-stat-2").hide(), $youmaxPlayBox.find(".media-uploaded").css("width", "50%")) : ($youmaxPlayBox.find(".media-popup-stat-1").hide(),
        $youmaxPlayBox.find(".media-popup-stat-2").hide(), $youmaxPlayBox.find(".media-uploaded").css("width", "100%")); 150 > $youmaxPlayBox.find(".media-popup-stat-1").width() && $youmaxPlayBox.find(".popup-stat-text").hide(); 400 > $youmaxPlayBox.find("#photo-detail-holder").width() ? $youmaxPlayBox.addClass("youmax-small-popup") : $youmaxPlayBox.removeClass("youmax-small-popup"); null != video_uploaded && (video_uploaded_array = video_uploaded.split(" "), 2 == video_uploaded_array.length && (video_uploaded_array[0] = video_uploaded,
        video_uploaded_array[1] = "", video_uploaded_array[2] = ""), $youmaxPlayBox.find(".media-uploaded").html('<i class="fa fa-clock-o"></i>' + video_uploaded_array[0] + ' <span class="popup-stat-text">' + video_uploaded_array[1] + " " + video_uploaded_array[2] + "</span>").attr("title", video_uploaded), 180 > $youmaxPlayBox.find(".media-uploaded").width() && $youmaxPlayBox.find(".media-uploaded").html('<i class="fa fa-clock-o"></i>' + video_uploaded_array[0] + " " + video_uploaded_array[1].charAt(0).toUpperCase())); -1 != videoLink.indexOf("youtube.com") ?
        $youmaxPlayBox.find(".youmax-view-on").html('View On <i class="fa fa-youtube-square"></i>') : -1 != videoLink.indexOf("vimeo.com") && $youmaxPlayBox.find(".youmax-view-on").html('View On <i class="fa fa-vimeo-square"></i>'); $youmaxPlayBox.find(".youmax-view-on-link").attr("href", videoLink); null == e || -1 == e.indexOf("vimeo_channel") && -1 == e.indexOf("vimeo_group") ? $youmaxPlayBox.find(".youmax-user-image>img").removeClass("zoom") : $youmaxPlayBox.find(".youmax-user-image>img").addClass("zoom"); $descriptionBox = $youmaxPlayBox.find(".photo-popup-description");
        250 > $descriptionBox.height() ? $youmaxPlayBox.find(".youmax-full-description-button-wrapper").hide() : $youmaxPlayBox.find(".youmax-full-description-button").click(function () { $descriptionBox.removeClass("photo-popup-description-limited"); $(this).hide() }); $youmaxPlayBox.find(".youmax-show-button.youmax-popup-show-button").attr("id", video_id_with_type).show(); $youmaxPlayBox.find(".youmax-show-button.youmax-popup-show-button").data("channelid", channel_id); $youmaxPlayBox.find(".youmax-encloser-comment-button.youmax-more-button").data("start-index",
        1); $youmaxPlayBox.find("#youmax-encloser-comment-holder").hide(); c.autoLoadComments && displayComments(video_id_with_type, b); video_type = video_id_with_type.substring(0, video_id_with_type.indexOf("_")); video_id = video_id_with_type.substring(video_id_with_type.indexOf("_") + 1); shareLink = "video" == c.shareLink ? "youtube" == video_type ? "https://youtu.be/" + video_id : "vimeo" == video_type ? "https://vimeo.com/" + video_id : window.location.href : window.location.href; config = {
            networks: {
                facebook: { app_id: c.facebookAppId }, email: { enabled: !1 },
                pinterest: { enabled: !1 }
            }, ui: { flyout: "top center", button_text: '<i class="fa fa-2x fa-share-alt"></i>' }, url: shareLink
        }; (new Share(".youmax-share-video-button", config)).open()
    }, 100)
}, displayInlineVideo = function (a, b, c, d, e) {
    var f = d.data("youmax_global_options"), g = d.data("youmax_translator_text"); f.showTextInsteadOfIcons ? (youmaxExtraPopupClasses = "youmax-text-instead-of-icons", youmaxShowCommentsText = g.showcomments, youmaxMoreCommentsText = g.loadmorecomments) : (youmaxExtraPopupClasses = "", youmaxShowCommentsText =
    '<i class="fa fa-comments fa-3x"></i>', youmaxMoreCommentsText = '<i class="fa fa-plus fa-3x"></i>'); encloserHTML = '<div class="fluid-width-video-wrapper" style="padding-top:' + 100 * f.aspectRatio + '%;"><iframe id="youmax-encloser-video" style="width:100%;" src="" frameborder="0" allowfullscreen></iframe></div><div id="youmax-encloser-comment-wrapper"><div id="photo-detail-holder"><div class="photo-popup-title-bar"><div class="photo-popup-title"></div> <div class="youmax-user-stamp"><a href="" target="_blank" class="youmax-user-link"><div class="youmax-user-image"><img src=""></div> <div class="youmax-user-name"></div></a></div> </div><div class="photo-popup-description photo-popup-description-limited"></div><div class="youmax-full-description-button-wrapper"><div class="youmax-full-description-button">More..</div></div><div class="photo-popup-stats"><div class="media-popup-stat-1"></div><div class="media-popup-stat-2"> </div><div class="media-uploaded"></div></div><div class="youmax-share-link-holder"><div type="button" class="youmax-share-video-button"><i class="fa fa-share-alt fa-2x"></i></div><div class="youmax-encloser-comment-button youmax-show-button youmax-popup-show-button">' +
    youmaxShowCommentsText + '</div><a href="" target="_blank" class="youmax-view-on-link"><div class="youmax-view-on">View on </div></a></div><div id="youmax-encloser-comment-holder" class="youmax-encloser-comment-holder-popup"><div class="youmax-video-comment youmax-commentbox-holder"><textarea class="youmax-comment-textbox" placeholder="' + g.thoughts + '"></textarea><button type="button" class="youmax-add-comment-button"><i class="fa fa-google-plus fa-2x"></i><span class="youmax-google-login-text">Login</span></button></div><div id="youmax-encloser-comments"></div><div class="youmax-encloser-comment-button youmax-more-button">' +
    youmaxMoreCommentsText + "</div></div></div> </div>"; d.find("#youmax-encloser").empty().append(encloserHTML); $youmaxEncloserIframe = d.find("#youmax-encloser-video"); $youmaxEncloserIframe.attr("src", ""); $youmaxEncloserIframe.parents("#youmax-encloser").show(); video_id_with_type = a.attr("id"); video_type = video_id_with_type.substring(0, video_id_with_type.indexOf("_")); video_id = video_id_with_type.substring(video_id_with_type.indexOf("_") + 1); frame_source = generateFrameSource(video_id, video_type, e, f); $youmaxEncloserIframe.attr("src",
    frame_source); displayVideoData(a, d); b && $("html, body").animate({ scrollTop: $youmaxEncloserIframe.offset().top - 50 }, "slow"); "newpage" == f.displayVideo && (f.linkNewPages && c ? -1 == location.href.indexOf("?v=") && -1 == location.href.indexOf("&v=") ? location.href += (location.search.length ? "&" : "?") + "v=" + video_id_with_type : (location_href = location.href.match(/(v=.+?)($|&)/, ""), location.href = location.href.replace(location_href[1], "v=" + video_id_with_type)) : (d.find("#youmax-video-list-div li").remove(), d.find(".youmax-tab-hover").removeClass("youmax-tab-hover"),
    d.find(".youmax-encloser-comment-button.youmax-show-button").click(), d.find("#youmax-showing-title").empty().hide()))
}, generateFrameSource = function (a, b, c, d) {
    var e = ""; "youtube" == b ? (c ? (a = a.substring(a.indexOf("playlist_videos_") + 16), e = d.videoProtocol + "//www.youtube.com/embed?listType=playlist&list=" + a + "&rel=0") : e = d.videoProtocol + "//www.youtube.com/embed/" + a + "?rel=0", d.autoPlayVideo && (e += "&autoplay=1"), e = d.showTitleInVideoPlayer ? e + "&showinfo=1" : e + "&showinfo=0", e += "&theme=" + d.videoPlayerTheme) : "vimeo" ==
    b && (e = d.videoProtocol + "//player.vimeo.com/video/" + a, d.autoPlayVideo && (e += "?autoplay=1")); return e
}, getSearchVideos = function (a, b, c) {
    var d = "", e = !1, f = !0, g = !1, k = c.data("youmax_global_options"), h = k.apiKey, l = k.maxResults; null != b && (d = "&pageToken=" + b, e = !0, f = !1); -1 != k.loadMode.indexOf("paginate") && e && (e = !1, g = !0); $searchTab = $("#" + a); restrictedChannels = $searchTab.data("restricttochannels"); relatedTo = $searchTab.data("relatedto"); searchQuery = $searchTab.data("searchquery"); searchOrder = $searchTab.data("searchorder");
    eventType = $searchTab.data("eventtype"); b = []; k = ""; null != searchQuery && "" != searchQuery && (searchQuery = searchQuery.replace(/ /g, "%20"), k = "&q=" + searchQuery); var m = ""; null != relatedTo && "" != relatedTo && (m = "&relatedToVideoId=" + relatedTo); var p = "", u = !1; null != eventType && "" != eventType && (p = "&eventType=" + eventType, u = !0); var q = ""; null != searchOrder && "" != searchOrder && (q = "&order=" + searchOrder); var r = ""; null != restrictedChannels && "" != restrictedChannels && (r = "&channelId=" + restrictedChannels); b.push("https://www.googleapis.com/youtube/v3/search?part=snippet" +
    k + m + p + q + r + "&type=video&maxResults=" + l + d + "&key=" + h); apiPlaylistVideosURL = b[0]; $.ajax({ url: apiPlaylistVideosURL, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (b) { u && setEvent(b); updateCache("youtube", b, c, f, e, g, a) }, error: function (a) { alert(a) }, beforeSend: setHeader })
}, getUserSearchVideos = function (a, b, c, d) {
    var e = "", f = !1, g = !0, k = !1, h = d.data("youmax_global_options"); null != c && (e = "&pageToken=" + c, f = !0, g = !1); -1 != h.loadMode.indexOf("paginate") && f && (f = !1, k = !0); null != a && "" != a.trim() && (a = a.trim().replace(/_/g,
    "%20"), "playlist" != h.searchBoxScope ? (c = "", "channel" == h.searchBoxScope && (c = "&channelId=" + h.channelId), apiSearchURL = "https://www.googleapis.com/youtube/v3/search?part=snippet&q=" + a + "&order=relevance" + c + "&type=video&maxResults=" + h.maxResults + e + "&key=" + h.apiKey, $.ajax({ url: apiSearchURL, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (a) { updateCache("youtube", a, d, g, f, k, b) }, error: function (a) { }, beforeSend: setHeader })) : null != h.playlistSearchFile && "" != h.playlistSearchFile && $.ajax({
        url: h.playlistSearchFile,
        type: "GET", async: !0, cache: !0, dataType: "json", success: function (c) { getPlaylistSearchVideos(c, a, d, g, f, k, b) }, error: function (a) { }, beforeSend: setHeader
    }))
}, getPlaylistSearchVideos = function (a, b, c, d, e, f, g) {
    var k = c.data("youmax_global_options"); searchList = a.searchList; searchQueryList = b.toLowerCase().split("%20"); searchResult = []; for (a = 0; a < searchList.length; a++) for (b = 0; b < searchQueryList.length; b++) {
        if (-1 != searchList[a].videoTitle.indexOf(searchQueryList[b])) { searchResult.push(searchList[a].videoId); break } if (-1 !=
        searchList[a].videoDescription.indexOf(searchQueryList[b])) { searchResult.push(searchList[a].videoId); break }
    } 0 < searchResult.length && (apiGetVideosURL = "https://www.googleapis.com/youtube/v3/videos?part=snippet&id=" + searchResult + "&key=" + k.apiKey, $.ajax({ url: apiGetVideosURL, type: "GET", async: !0, cache: !0, dataType: "jsonp", success: function (a) { updateCache("youtube", a, c, d, e, f, g) }, error: function (a) { }, beforeSend: setHeader }))
}, showLoader = function (a) {
    var b = a.data("youmax_translator_text"); a.find("#youmax-video-list-div>ul").empty();
    a.find("#youmax-encloser").empty(); a.find("#youmax-encloser-video").attr("src", ""); a.find("#youmax-video-list-div>ul").append('<div class="youmax-loading-div" style="text-align:center; height:200px; font:14px Calibri;"><span style="opacity:0;">.</span><br><br><br><br>' + b.loadinghd + '<br><br><br><br><br><br><span style="opacity:0;">.</span></div>'); a.find("#youmax-showing-title").empty().hide()
}, displayComments = function (a, b) {
    var c = b.data("youmax_global_options"), d = b.data("youmax_translator_text"); $youmaxPlayBox =
    "popup" == c.displayVideo ? $(".youmax-popup.mfp-gallery") : b; video_type = a.substring(0, a.indexOf("_")); video_id = a.substring(a.indexOf("_") + 1); $youmaxPlayBox.find(".youmax-encloser-comment-button.youmax-show-button").hide(); $youmaxPlayBox.find("#youmax-encloser-comment-holder").show(); $youmaxPlayBox.find("#youmax-encloser-comments").empty().append("<div class='youmax-loading-comments-div'>" + d.loading + "</div>"); "youtube" == video_type ? getYoutubeVideoComments(video_id, b) : "vimeo" == video_type && (getVimeoVideoComments(video_id,
    b), $youmaxPlayBox.find(".youmax-comment-textbox").attr("disabled", "disabled").addClass("youmax-disabled"), $youmaxPlayBox.find(".youmax-add-comment-button").attr("disabled", "disabled").addClass("youmax-disabled"))
}, loadMoreComments = function (a) {
    var b = a.data("youmax_global_options"), c = a.data("youmax_translator_text"); $youmaxPlayBox = "popup" == b.displayVideo ? $(".youmax-popup.mfp-gallery") : a; var d = $youmaxPlayBox.find(".youmax-encloser-comment-button.youmax-more-button"); d.addClass("youmax-load-more-comments-clicked");
    b.showTextInsteadOfIcons ? d.html(c.loading) : d.html('<i class="fa fa-ellipsis-h fa-3x"></i>'); var e = d.data("nextpagetoken"); null != e && "undefined" != e && "" != e ? (video_id_with_type = $youmaxPlayBox.find(".youmax-encloser-comment-button.youmax-show-button").attr("id"), video_type = video_id_with_type.substring(0, video_id_with_type.indexOf("_")), video_id = video_id_with_type.substring(video_id_with_type.indexOf("_") + 1), "youtube" == video_type ? getYoutubeVideoComments(video_id, a, e) : "vimeo" == video_type && getVimeoVideoComments(video_id,
    a, e)) : (d.removeClass("youmax-load-more-comments-clicked"), b.showTextInsteadOfIcons ? d.html(c.done) : d.html('<i class="fa fa-close fa-3x"></i>'))
}, displayItems = function (a, b) {
    cache = []; b.data("cache", cache); b.data("cacheindex", 0); b.removeClass("newpage"); b.find("#youmax-encloser").hide(); b.find("#youmax-encloser-video").attr("src", ""); showLoader(b); -1 != a.indexOf("youtube_channel_uploads_") ? (innerId = a.substring(24), getYouTubePlaylistVideos(innerId, a, null, b)) : -1 != a.indexOf("youtube_channel_playlists_") ?
    (innerId = a.substring(26), getYouTubeChannelPlaylists(innerId, a, null, b)) : -1 != a.indexOf("youtube_channel_search_") ? getSearchVideos(a, null, b) : -1 != a.indexOf("youtube_channel_events_") ? (innerId = a.substring(23), getYouTubeChannelEvents(innerId, a, null, b)) : -1 != a.indexOf("youtube_playlist_videos_") ? (innerId = a.substring(24), getYouTubePlaylistVideos(innerId, a, null, b)) : -1 != a.indexOf("vimeo_user_videos_") ? (innerId = a.substring(18), getVimeoUserVideos(innerId, a, null, b)) : -1 != a.indexOf("vimeo_channel_videos_") ? (innerId =
    a.substring(21), getVimeoChannelVideos(innerId, a, null, b)) : -1 != a.indexOf("vimeo_group_videos_") ? (innerId = a.substring(19), getVimeoGroupVideos(innerId, a, null, b)) : -1 != a.indexOf("vimeo_album_videos_") ? (innerId = a.substring(19), getVimeoAlbumVideos(innerId, a, null, b)) : -1 != a.indexOf("query_") && (innerId = a.substring(6), getUserSearchVideos(innerId, a, null, b)); b.find(".youmax-tab").removeClass("youmax-tab-hover"); $("#" + a).addClass("youmax-tab-hover"); b.find("#youmax-select").val(a)
}, initTranlator = function (a) {
    var b =
    a.data("youmax_global_options"); a.data("youmax_translator_text", {
        search: "Search", uploads: "Uploads", playlists: "Playlists", events: "Events", views: "views", likes: "likes", videos: "videos", subscribers: "subscribers", year: "year", years: "years", month: "month", months: "months", day: "day", days: "days", hour: "hour", hours: "hours", ago: "ago", now: "just now", thoughts: "Share your Thoughts...", comments: "comments", loadmore: "Load More", next: "Next", previous: "Previous", loadmorecomments: "Load More Comments", showcomments: "Show Comments",
        done: "Done", nocommentsfound: "No More Comments Found", loading: "Loading..", loadinghd: "Loading HD..."
    }); null != b.translatorFile && "" != b.translatorFile ? getTranslationFile(a) : initiatePlugin(a)
}, getTranslationFile = function (a) { var b = a.data("youmax_global_options"); $.ajax({ url: b.translatorFile, type: "GET", async: !0, cache: !0, dataType: "json", success: function (b) { applyTranslation(b, a) }, error: function (b) { initiatePlugin(a) }, beforeSend: setHeader }) }, applyTranslation = function (a, b) {
    youmax_translator_text = a.translator;
    b.data("youmax_translator_text", youmax_translator_text); initiatePlugin(b)
}, initiatePlugin = function (a) { initYoumax(a); initVideo(a); createTabs(a); initHeader(a) }, createTabs = function (a) {
    var b = a.data("youmax_global_options"); $tabContainer = a.find("#youmax-tabs"); $selectConatiner = a.find("#youmax-select"); if (null != b.youtube_channel_uploads) for (i = 0; i < b.youtube_channel_uploads.length; i++) {
        b.doNotSelectTabsByDefault && (b.youtube_channel_uploads[i].selected = !1); channelId = scrapeChannelId(b.youtube_channel_uploads[i].url,
        "youtube_channel_uploads_", a, b.youtube_channel_uploads[i].selected); var c = "youtube_channel_uploads_" + channelId; $tabContainer.append('<span id="' + c + '" class="youmax-tab" >' + b.youtube_channel_uploads[i].name.replace(/%20/g, " ") + "</span>"); $selectConatiner.append('<option value="' + c + '" class="youmax-option-highlight" >' + b.youtube_channel_uploads[i].name.replace(/%20/g, " ") + "</option>")
    } if (null != b.youtube_channel_playlists) for (i = 0; i < b.youtube_channel_playlists.length; i++) b.doNotSelectTabsByDefault && (b.youtube_channel_playlists[i].selected =
    !1), channelId = scrapeChannelId(b.youtube_channel_playlists[i].url, "youtube_channel_playlists_", a, b.youtube_channel_playlists[i].selected), $tabContainer.append('<span id="youtube_channel_playlists_' + channelId + '" class="youmax-tab" >' + b.youtube_channel_playlists[i].name.replace(/%20/g, " ") + "</span>"), $selectConatiner.append('<option value="youtube_channel_playlists_' + channelId + '" class="youmax-option-highlight" >' + b.youtube_channel_playlists[i].name.replace(/%20/g, " ") + "</option>"), b.youtube_channel_playlists[i].selected &&
    $tabContainer.find("#youtube_channel_playlists_" + channelId).click(); if (null != b.youtube_channel_events) for (i = 0; i < b.youtube_channel_events.length; i++) b.doNotSelectTabsByDefault && (b.youtube_channel_events[i].selected = !1), channelId = scrapeChannelId(b.youtube_channel_events[i].url, "youtube_channel_events_", a, b.youtube_channel_events[i].selected), $tabContainer.append('<span id="youtube_channel_events_' + channelId + '" class="youmax-tab" >' + b.youtube_channel_events[i].name.replace(/%20/g, " ") + "</span>"), $selectConatiner.append('<option value="youtube_channel_events_' +
    channelId + '" class="youmax-option-highlight" >' + b.youtube_channel_events[i].name.replace(/%20/g, " ") + "</option>"), b.youtube_channel_events[i].selected && $tabContainer.find("#youtube_channel_events_" + channelId).click(); if (null != b.youtube_channel_search) for (i = 0; i < b.youtube_channel_search.length; i++) dataString = "", suffix = parseInt(1E10 * Math.random()), b.doNotSelectTabsByDefault && (b.youtube_channel_search[i].selected = !1), null != b.youtube_channel_search[i].restrictToChannels ? (channelId = scrapeChannelId(b.youtube_channel_search[i].restrictToChannels,
    "youtube_channel_search_" + suffix, a, b.youtube_channel_search[i].selected), dataString += ' data-restricttochannels="' + channelId + '"') : dataString += ' data-restricttochannels=""', null != b.youtube_channel_search[i].relatedTo ? (s = b.youtube_channel_search[i].relatedTo.indexOf("/watch?v="), -1 != s ? (videoId = b.youtube_channel_search[i].relatedTo.substring(s + 9), dataString += ' data-relatedto="' + videoId + '"') : dataString += ' data-relatedto=""') : dataString += ' data-relatedto=""', dataString = null != b.youtube_channel_search[i].searchQuery ?
    dataString + (' data-searchquery="' + b.youtube_channel_search[i].searchQuery + '"') : dataString + ' data-searchquery=""', dataString = null != b.youtube_channel_search[i].searchOrder ? dataString + (' data-searchorder="' + b.youtube_channel_search[i].searchOrder + '"') : dataString + ' data-searchorder="date"', dataString = null != b.youtube_channel_search[i].eventType ? dataString + (' data-eventtype="' + b.youtube_channel_search[i].eventType + '"') : dataString + ' data-eventtype=""', $tabContainer.append('<span id="youtube_channel_search_' +
    suffix + '" class="youmax-tab" ' + dataString + " >" + b.youtube_channel_search[i].name.replace(/%20/g, " ") + "</span>"), $selectConatiner.append('<option value="youtube_channel_search_' + suffix + '" class="youmax-option-highlight" ' + dataString + " >" + b.youtube_channel_search[i].name.replace(/%20/g, " ") + "</option>"), b.youtube_channel_search[i].selected && $tabContainer.find("#youtube_channel_search_" + suffix).click(); if (null != b.youtube_playlist_videos) for (i = 0; i < b.youtube_playlist_videos.length; i++) b.doNotSelectTabsByDefault &&
    (b.youtube_playlist_videos[i].selected = !1), s = b.youtube_playlist_videos[i].url.indexOf("list="), -1 != s ? playlistId = b.youtube_playlist_videos[i].url.substring(s + 5) : (playlistId = "null", alert("Could Not List Videos.." + b.youtube_playlist_videos[i].url)), c = "youtube_playlist_videos_" + playlistId, $tabContainer.append('<span id="' + c + '" class="youmax-tab" >' + b.youtube_playlist_videos[i].name.replace(/%20/g, " ") + "</span>"), $selectConatiner.append('<option value="' + c + '" class="youmax-option-highlight" >' + b.youtube_playlist_videos[i].name.replace(/%20/g,
    " ") + "</option>"), b.youtube_playlist_videos[i].selected && $tabContainer.find("#" + c).click(), getYouTubePlaylistChannel(playlistId, c, a); if (null != b.vimeo_user_videos) for (i = 0; i < b.vimeo_user_videos.length; i++) b.doNotSelectTabsByDefault && (b.vimeo_user_videos[i].selected = !1), s = b.vimeo_user_videos[i].url.indexOf("vimeo.com/"), -1 != s ? vimeoId = b.vimeo_user_videos[i].url.substring(s + 10) : (vimeoId = "null", alert("Could Not Find Vimeo User.." + b.vimeo_user_videos[i].url)), c = "vimeo_user_videos_" + vimeoId, $tabContainer.append('<span id="' +
    c + '" class="youmax-tab" >' + b.vimeo_user_videos[i].name.replace(/%20/g, " ") + "</span>"), $selectConatiner.append('<option value="' + c + '" class="youmax-option-highlight" >' + b.vimeo_user_videos[i].name.replace(/%20/g, " ") + "</option>"), b.vimeo_user_videos[i].selected && $tabContainer.find("#" + c).click(), getVimeoUserDetails(vimeoId, c, a); if (null != b.vimeo_channel_videos) for (i = 0; i < b.vimeo_channel_videos.length; i++) b.doNotSelectTabsByDefault && (b.vimeo_channel_videos[i].selected = !1), s = b.vimeo_channel_videos[i].url.indexOf("vimeo.com/channels/"),
    -1 != s ? vimeoId = b.vimeo_channel_videos[i].url.substring(s + 19) : (vimeoId = "null", alert("Could Not Find Vimeo User.." + b.vimeo_channel_videos[i].url)), c = "vimeo_channel_videos_" + vimeoId, $tabContainer.append('<span id="' + c + '" class="youmax-tab" >' + b.vimeo_channel_videos[i].name.replace(/%20/g, " ") + "</span>"), $selectConatiner.append('<option value="' + c + '" class="youmax-option-highlight" >' + b.vimeo_channel_videos[i].name.replace(/%20/g, " ") + "</option>"), b.vimeo_channel_videos[i].selected && $tabContainer.find("#" +
    c).click(), getVimeoChannelDetails(vimeoId, c, a); if (null != b.vimeo_group_videos) for (i = 0; i < b.vimeo_group_videos.length; i++) b.doNotSelectTabsByDefault && (b.vimeo_group_videos[i].selected = !1), s = b.vimeo_group_videos[i].url.indexOf("vimeo.com/groups/"), -1 != s ? vimeoId = b.vimeo_group_videos[i].url.substring(s + 17) : (vimeoId = "null", alert("Could Not Find Vimeo Group.." + b.vimeo_group_videos[i].url)), c = "vimeo_group_videos_" + vimeoId, $tabContainer.append('<span id="' + c + '" class="youmax-tab" >' + b.vimeo_group_videos[i].name.replace(/%20/g,
    " ") + "</span>"), $selectConatiner.append('<option value="' + c + '" class="youmax-option-highlight" >' + b.vimeo_group_videos[i].name.replace(/%20/g, " ") + "</option>"), b.vimeo_group_videos[i].selected && $tabContainer.find("#" + c).click(), getVimeoGroupDetails(vimeoId, c, a); if (null != b.vimeo_album_videos) for (i = 0; i < b.vimeo_album_videos.length; i++) b.doNotSelectTabsByDefault && (b.vimeo_album_videos[i].selected = !1), s = b.vimeo_album_videos[i].url.indexOf("vimeo.com/album/"), -1 != s ? vimeoId = b.vimeo_album_videos[i].url.substring(s +
    16) : (vimeoId = "null", alert("Could Not Find Vimeo Album.." + b.vimeo_album_videos[i].url)), c = "vimeo_album_videos_" + vimeoId, $tabContainer.append('<span id="' + c + '" class="youmax-tab" >' + b.vimeo_album_videos[i].name.replace(/%20/g, " ") + "</span>"), $selectConatiner.append('<option value="' + c + '" class="youmax-option-highlight" >' + b.vimeo_album_videos[i].name.replace(/%20/g, " ") + "</option>"), b.vimeo_album_videos[i].selected && $tabContainer.find("#" + c).click(), getVimeoAlbumDetails(vimeoId, c, a)
}, scrapeChannelId =
function (a, b, c, d) { channelId = "null"; s = a.indexOf("/user/"); -1 != s ? (channelId = a.substring(s + 6), getChannelIdForTabs(channelId, b, c, d)) : (s = a.indexOf("/channel/"), -1 != s ? (channelId = a.substring(s + 9), "youtube_channel_uploads_" == b ? getUploadsPlaylistIdForTabs(channelId, b, c, d) : getYouTubeChannelDetails(channelId, b, c)) : alert("Could Not Find Channel.." + a)); return channelId }, initHeader = function (a) {
    var b = a.data("youmax_global_options"), c; null != b.channel && (c = b.channel.indexOf("/user/"), -1 != c ? (userId = b.channel.substring(c +
    6), apiUrl = "https://www.googleapis.com/youtube/v3/channels?part=id&forUsername=" + userId + "&key=" + b.apiKey, getChannelId(apiUrl, a)) : (c = b.channel.indexOf("/channel/"), -1 != c ? (channelId = b.channel.substring(c + 9), getChannelDetails(channelId, a)) : alert("Could Not Find Channel..")))
}, initVideo = function (a) { var b = a.data("youmax_global_options"); "newpage" == b.displayVideo && b.linkNewPages && displayVideoFromUrl(a) }, displayVideoFromUrl = function (a) {
    if (-1 != location.href.indexOf("v=")) {
        location_href = location.href.match(/v=(.+?)($|&)/,
        ""); video_id_with_type = location_href[1]; video_type = video_id_with_type.substring(0, video_id_with_type.indexOf("_")); video_id = video_id_with_type.substring(video_id_with_type.indexOf("_") + 1); "youtube" == video_type ? getYoutubeVideoDetails(video_id, a, !1, !1) : "vimeo" == video_type && getVimeoVideoDetails(video_id, a, !1, !1); var b = a.data("youmax_global_options"); b.doNotSelectTabsByDefault = !0; a.data("youmax_global_options", b); a.addClass("newpage")
    }
}, setMediaQueries = function (a, b) {
    b.removeClass("gt1400 gt1350 gt1300 gt1250 gt1200 gt1150 gt1100 gt1050 gt1000 gt950 gt900 lt1400 lt1350 lt1300 lt1250 lt1200 lt1150 lt1100 lt1050 lt1000 lt950 lt900 lt850 lt800 lt750 lt700 lt650 lt600 lt550 lt500 lt450 lt400");
    1250 < a && b.addClass("gt1400"); 1250 < a && b.addClass("gt1350"); 1250 < a && b.addClass("gt1300"); 1250 < a && b.addClass("gt1250"); 1200 < a && b.addClass("gt1200"); 1150 < a && b.addClass("gt1150"); 1100 < a && b.addClass("gt1100"); 1050 < a && b.addClass("gt1050"); 1E3 < a && b.addClass("gt1000"); 950 < a && b.addClass("gt950"); 900 < a && b.addClass("gt900"); 850 < a && b.addClass("gt850"); 800 < a && b.addClass("gt800"); 1250 > a && b.addClass("lt1400"); 1250 > a && b.addClass("lt1350"); 1250 > a && b.addClass("lt1300"); 1250 > a && b.addClass("lt1250"); 1200 > a && b.addClass("lt1200");
    1150 > a && b.addClass("lt1150"); 1100 > a && b.addClass("lt1100"); 1050 > a && b.addClass("lt1050"); 1E3 > a && b.addClass("lt1000"); 950 > a && b.addClass("lt950"); 900 > a && b.addClass("lt900"); 850 > a && b.addClass("lt850"); 800 > a && b.addClass("lt800"); 750 > a && b.addClass("lt750"); 700 > a && b.addClass("lt700"); 650 > a && b.addClass("lt650"); 600 > a && b.addClass("lt600"); 550 > a && b.addClass("lt550"); 500 > a && b.addClass("lt500"); 450 > a && b.addClass("lt450"); 400 > a && b.addClass("lt400")
};
youmax = function (a) {
    var b = {}, c = $("#youmax"); a.skin = a.skin || "block"; b.apiKey = a.apiKey || "AIzaSyDEm5wGLsWi2G3WG40re-DAJcWioQSpJ6o"; b.channel = a.channel || "https://www.youtube.com/channel/UC_IRYSp4auq7hKLvziWVH6w"; b.clientId = a.clientId || "237485577723-lndqepqthdb3lh4gec2skvpfaii9sgh0.apps.googleusercontent.com"; b.maxResults = a.maxResults || 18; b.displayVideo = a.displayVideo || "popup"; b.aspectRatio = .5625; b.alwaysUseDropdown = a.alwaysUseDropdown; b.maxPlaylistNameLength = 22; b.autoPlayVideo = a.autoPlayVideo || !1; b.displayFirstVideoOnLoad =
    a.displayFirstVideoOnLoad || !1; b.linkNewPages = a.linkNewPages || !1; b.videoProtocol = a.videoProtocol || "http:"; b.featuredVideo = a.featuredVideo || ""; b.searchBoxScope = a.searchBoxScope || "channel"; b.autoLoadComments = a.autoLoadComments || !1; b.alignPopupToTop = a.alignPopupToTop; b.commentOrder = a.commentOrder || "time"; b.playlistSearchFile = a.playlistSearchFile || ""; b.skin = a.skin || "block"; b.userWebsite = a.userWebsite || ""; b.videoMode = a.videoMode || "wide"; b.shareLink = a.shareLink || "video"; b.facebookAppId = a.facebookAppId ||
    ""; b.widgetMode = a.widgetMode || !1; b.viewCountType = a.viewCountType || "abbr"; b.showEvents = a.showEvents || !1; b.likeCommentCountType = a.likeCommentCountType || "abbr"; b.loadMode = a.loadMode || "loadmore"; b.hideHeader = a.hideHeader || !1; b.hideNavigation = a.hideNavigation || !1; b.loadButtonSize = a.loadButtonSize || "large"; b.playlistAction = a.playlistAction || "showvideos"; b.videoPlayerTheme = a.videoPlayerTheme || "dark"; b.hideComments = a.hideComments || !1; b.minVideoContainerHeight = a.minVideoContainerHeight || 10; b.hideVideoThumbnails =
    a.hideVideoThumbnails || !1; b.hideLoadMore = a.hideLoadMore || !1; b.showTitleInVideoPlayer = a.showTitleInVideoPlayer; b.translatorFile = a.translatorFile || ""; b.hideVideoDetails = a.hideVideoDetails || !1; b.vimeoAccessToken = a.vimeoAccessToken || "c289d754a132ca07051aaf931ef0de33"; b.youtube_channel_uploads = a.youtube_channel_uploads; b.youtube_channel_playlists = a.youtube_channel_playlists; b.youtube_channel_events = a.youtube_channel_events; b.youtube_channel_search = a.youtube_channel_search; b.youtube_playlist_videos = a.youtube_playlist_videos;
    b.vimeo_user_videos = a.vimeo_user_videos; b.vimeo_channel_videos = a.vimeo_channel_videos; b.vimeo_group_videos = a.vimeo_group_videos; b.vimeo_album_videos = a.vimeo_album_videos; b.showVimeoLikesInsteadOfViews = a.showVimeoLikesInsteadOfViews || !1; b.updateLayoutDelay = a.updateLayoutDelay || 500; b.hotThreshold = a.hotThreshold || 300; b.trendingThreshold = a.trendingThreshold || 100; b.minimumFadeTimeout = a.minimumFadeTimeout || 1E3; b.showTopAdSpace = a.showTopAdSpace || !1; b.topAdHtml = a.topAdHtml || ""; b.fourColumnContainerWidth =
    a.fourColumnContainerWidth || "1150px"; b.threeColumnContainerWidth = a.threeColumnContainerWidth || "1000px"; b.twoColumnContainerWidth = a.twoColumnContainerWidth || "750px"; b.oneColumnContainerWidth = a.oneColumnContainerWidth || "500px"; b.fiveColumnThumbnailWidth = a.fiveColumnThumbnailWidth || "18%"; b.fiveColumnThumbnailLeftRightMargin = a.fiveColumnThumbnailLeftRightMargin || "1%"; b.fourColumnThumbnailWidth = a.fourColumnThumbnailWidth || "23%"; b.fourColumnThumbnailLeftRightMargin = a.fourColumnThumbnailLeftRightMargin ||
    "1%"; b.threeColumnThumbnailWidth = a.threeColumnThumbnailWidth || "30.3%"; b.threeColumnThumbnailLeftRightMargin = a.threeColumnThumbnailLeftRightMargin || "1.5%"; b.twoColumnThumbnailWidth = a.twoColumnThumbnailWidth || "46%"; b.twoColumnThumbnailLeftRightMargin = a.twoColumnThumbnailLeftRightMargin || "2%"; b.oneColumnThumbnailWidth = a.oneColumnThumbnailWidth || "95%"; b.oneColumnThumbnailLeftRightMargin = a.oneColumnThumbnailLeftRightMargin || "2.5%"; b.thumbnailBottomMargin = a.thumbnailBottomMargin || "25px"; b.containerLeftRightMargin =
    a.containerLeftRightMargin || "2%"; b.hideDefinition = a.hideDefinition || !1; b.playIconType = a.playIconType || "default"; b.showTextInsteadOfIcons = a.showTextInsteadOfIcons || !1; b.maxComments = a.maxComments || 7; b.headerCountType = a.headerCountType || "abbr"; b.gridTransitionSpeed = a.gridTransitionSpeed || "0.4s"; b.relayoutOnCreate = a.relayoutOnCreate; c.data("youmax_global_options", b); convertViewCountForThumbnail = "comma" == b.viewCountType ? convertViewCountWithComma : convertViewCount; convertLikeCommentCount = "comma" == b.likeCommentCountType ?
        convertViewCountWithComma : convertViewCount; convertHeaderCounts = "comma" == b.headerCountType ? convertViewCountWithComma : convertViewCount; -1 != b.skin.indexOf("clean") && (b.alwaysUseDropdown = !0); "paginate-sides" == b.loadMode && (b.loadButtonSize = "small", b.playlistAction = "playall"); if (null == b.showTitleInVideoPlayer || "" === b.showTitleInVideoPlayer) b.showTitleInVideoPlayer = !0; if (null == b.alignPopupToTop || "" === b.alignPopupToTop) b.alignPopupToTop = !0; if (null == b.alwaysUseDropdown || "" === b.alwaysUseDropdown) b.alwaysUseDropdown =
        !0; if (null == b.relayoutOnCreate || "" === b.relayoutOnCreate) b.relayoutOnCreate = !0; -1 != b.skin.indexOf("list") && (b.fourColumnContainerWidth = "5000px", b.threeColumnContainerWidth = "5000px", b.twoColumnContainerWidth = "5000px", b.oneColumnContainerWidth = "1400px", b.oneColumnThumbnailWidth = "97%", b.oneColumnThumbnailLeftRightMargin = "1.5%"); c.data("cache", []); c.data("cacheindex", 0); c.data("eventcache", { items: [], nextPageToken: "youmax-generated" }); c.data("eventcachestatus", []); document.createStyleSheet ? document.createStyleSheet(b.videoProtocol +
        "//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css") : $("head").append("<link rel='stylesheet' href='" + b.videoProtocol + "//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css' type='text/css' />"); a.maxContainerWidth = a.maxContainerWidth || 1080; c.css("max-width", a.maxContainerWidth + "px"); a = ""; var d = "#" + c.attr("id") + " "; "wide" == b.videoMode && (a += "#youmax-encloser {max-width: 100% !important;} #youmax-encloser-comment-wrapper {max-width: 880px;margin: 20px auto auto;}");
    b.widgetMode && c.addClass("youmax-widget"); b.showTextInsteadOfIcons && c.addClass("youmax-text-instead-of-icons"); b.hideHeader && (a += "#youmax-header{display:none !important;} .youmax-select-box-wrapper {padding-top: 3px;}"); b.hideNavigation && (a += "#youmax-tabs,.youmax-select-box-wrapper,#youmax-select-box{display:none !important;}"); b.hideComments && (a += "#youmax-encloser-comment-holder,.youmax-show-button-wrapper{display:none !important;} .photo-popup-stats {border-bottom: none !important;}"); b.hideVideoDetails &&
    (a += d + ".photo-popup-title," + d + ".photo-popup-description," + d + ".photo-popup-stats{display:none !important;}"); b.hideVideoDetails && b.hideComments && (a += "#photo-detail-holder{display:none !important;}"); b.hideVideoThumbnails && (a += "#youmax-video-list-div{display:none !important;}"); b.hideLoadMore && (a += "#youmax-load-more-div,.youmax-pagination,.youmax-pagination-button-wrapper{display:none !important;}"); 0 < b.minVideoContainerHeight && (a += "#youmax-video-list-div{min-height:" + b.minVideoContainerHeight + "px;}");
    b.hideDefinition && (a += ".youmax-definition{display:none !important;}"); "white_grey_combo" == b.playIconType ? a += ".youmax-play-overlay {display: block !important;background-color: rgba(0,0,0,0) !important;} .youmax-play-icon-holder { background-color: rgba(255,255,255,0.85);border: none !important;} .youmax-play-icon-holder i {color: #878787;padding: 15px 0 0 19px !important;font-size: 20px !important;} .youmax-play-hover .youmax-play-icon-holder{transition: 0.3s; background-color: #CF1F1F !important;} .youmax-play-hover i{color: white !important;}" :
    "white_black_combo" == b.playIconType ? a += "div.youmax-play-overlay {display: block !important; background-color: rgba(0,0,0,.2);} .youmax-play-hover .youmax-play-icon-holder {background-color: #CF1F1F !important;border-color: #CF1F1F !important;} .youmax-play-hover.youmax-play-overlay {background-color: rgba(0,0,0,0);}" : "no_icon" == b.playIconType && (a += ".youmax-play-overlay {display: none !important;}"); setMediaQueries(c.width(), c); a += ".youmax-grid-item {margin-bottom: " + b.thumbnailBottomMargin + ";} #youmax-video-list-div {padding-left: " +
    b.containerLeftRightMargin + ";padding-right: " + b.containerLeftRightMargin + ";}"; b.fourColumnContainerWidth = b.fourColumnContainerWidth.replace("px", ""); a += ".gt" + b.fourColumnContainerWidth + " .youmax-grid-item {width: " + b.fiveColumnThumbnailWidth + "; margin-left: " + b.fiveColumnThumbnailLeftRightMargin + "; margin-right: " + b.fiveColumnThumbnailLeftRightMargin + ";} .lt" + b.fourColumnContainerWidth + " .youmax-grid-item {width: " + b.fourColumnThumbnailWidth + "; margin-left: " + b.fourColumnThumbnailLeftRightMargin +
    ";margin-right: " + b.fourColumnThumbnailLeftRightMargin + ";}"; b.threeColumnContainerWidth = b.threeColumnContainerWidth.replace("px", ""); a += ".lt" + b.threeColumnContainerWidth + " .youmax-grid-item {width: " + b.threeColumnThumbnailWidth + "; margin-left: " + b.threeColumnThumbnailLeftRightMargin + ";margin-right: " + b.threeColumnThumbnailLeftRightMargin + ";}"; b.twoColumnContainerWidth = b.twoColumnContainerWidth.replace("px", ""); a += ".lt" + b.twoColumnContainerWidth + " .youmax-grid-item {width: " + b.twoColumnThumbnailWidth +
    "; margin-left: " + b.twoColumnThumbnailLeftRightMargin + ";margin-right: " + b.twoColumnThumbnailLeftRightMargin + ";}"; b.oneColumnContainerWidth = b.oneColumnContainerWidth.replace("px", ""); a += ".lt" + b.oneColumnContainerWidth + " .youmax-grid-item {width: " + b.oneColumnThumbnailWidth + "; margin-left: " + b.oneColumnThumbnailLeftRightMargin + ";margin-right: " + b.oneColumnThumbnailLeftRightMargin + ";}"; "block1" == b.skin ? a += "span.youmax-view-date-holder, .youmax-like-comment-holder {display: none !important;} #tiles li p {padding-bottom: 5px !important;} .youmax-duration {bottom: 125px !important;}" :
    "block2" == b.skin ? a += ".youmax-like-comment-holder {display: none !important;} #tiles li p {padding-bottom: 6px !important;} .youmax-duration {bottom: 163px !important;}" : "block3" == b.skin ? a += "span.youmax-view-date-holder {display: none !important;} #tiles li p {padding-bottom: 6px !important;} .youmax-duration {bottom: 155px !important;}" : "block4" == b.skin ? a += "#tiles li p, .youmax-like-comment-holder {display: none !important;} .youmax-duration {bottom: 10px !important;}" : "trend1" == b.skin ? a += "span.youmax-trend-holder, .youmax-thumbnail-link, .youmax-trend-link-holder {display: none !important;} span.youmax-title-desc-holder {margin-bottom: 5px;}.youmax-duration {bottom: 165px !important;}" :
    "trend2" == b.skin ? a += "span.youmax-view-date-holder {display: none !important;} span.youmax-trend-link-holder {border-top: 1px solid #e2e2e2;} span.youmax-trend-link-holder {padding-top: 5px;margin-top: 6px;} #tiles li p {padding-bottom: 5px !important;} .youmax-duration {bottom: 170px !important;}" : "grey1" == b.skin || "white1" == b.skin || "blue1" == b.skin ? a += "span.youmax-view-date-holder {display: none !important;} span.youmax-video-list-title {height: 52px !important; padding-top: 4px !important;} .youmax-duration {bottom: 75px !important;}" :
    "list1" == b.skin && (a += "span.youmax-view-date-holder {display: none !important;} .youmax-title-desc-holder {height: 120px !important;} .youmax-video-list-description { max-height: 80px !important;} .lt700 .youmax-title-desc-holder {height: 100px !important;} .lt700 .youmax-video-list-description {max-height: 60px !important;} .lt600 .youmax-video-list-description {display: inline-block !important;}"); $("head").append("<style class='youmax-added-styles'>" + a + "</style>"); initTranlator(c); document.documentElement.setAttribute("data-useragent",
    navigator.userAgent); return this
}; function youmaxSaveToken(a) { a.status.signed_in && (youmaxLoggedInUser.youmaxAccessToken = a.access_token, jQuery(".youmax-add-comment-button").removeAttr("disabled").html('<i class="fa fa-send fa-2x"></i>')) };
